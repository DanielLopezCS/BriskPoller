{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\Polls\\\\Polls.js\";\nimport React, { Component } from 'react';\nimport { Grid, Segment, Header, Container } from 'semantic-ui-react';\n\nvar Polls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Polls, _Component);\n\n  function Polls() {\n    _classCallCheck(this, Polls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Polls).apply(this, arguments));\n  }\n\n  _createClass(Polls, [{\n    key: \"render\",\n    value: function render() {\n      var polls = [{\n        text: 'Should I play Shaman?',\n        options: 5\n      }, {\n        text: 'Should I play Rogue?',\n        options: 2\n      }, {\n        text: 'Should I play Warrior?',\n        options: 10\n      }, {\n        text: 'Should I play Priest?',\n        options: 32\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, polls.map(function (poll) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '80vh'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Segment, {\n          floated: \"left\",\n          compact: true,\n          color: \"red\",\n          inverted: true,\n          textAlign: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, poll.text), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Polls;\n}(Component);\n\nexport { Polls as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\Polls\\Polls.js"],"names":["React","Component","Grid","Segment","Header","Container","Polls","polls","text","options","map","poll","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,SAAhC,QAAiD,mBAAjD;;IAGqBC,K;;;;;;;;;;;;;6BAER;AACL,UAAMC,KAAK,GAAG,CACV;AAACC,QAAAA,IAAI,EAAC,uBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OADU,EAIV;AAACD,QAAAA,IAAI,EAAC,sBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OAJU,EAMV;AAACD,QAAAA,IAAI,EAAC,wBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OANU,EAQV;AAACD,QAAAA,IAAI,EAAC,uBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OARU,CAAd;AAaA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,eAEb;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IAAI,CAACH,IADV,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,EASE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,EAaE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CAbF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,EAiBE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CAjBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApBF,EAqBE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CArBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAxBF,EAyBE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CAzBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA5BF,EA8BE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CA9BF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjCF,EAkCE,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,MAAjB;AAAwB,UAAA,OAAO,MAA/B;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAA4C,UAAA,QAAQ,MAApD;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKG,IAAI,CAACH,IADV,CAlCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArCF,CAFa;AAAA,OAAd,CADL,CADJ;AAmDH;;;;EAnE8BP,S;;SAAdK,K","sourcesContent":["import React, { Component } from 'react'\r\nimport { Grid, Segment, Header, Container } from 'semantic-ui-react'\r\n\r\n\r\nexport default class Polls extends Component {\r\n\r\n    render() {\r\n        const polls = [\r\n            {text:'Should I play Shaman?',\r\n            options: 5\r\n            },\r\n            {text:'Should I play Rogue?',\r\n            options: 2},\r\n            {text:'Should I play Warrior?',\r\n            options: 10},\r\n            {text:'Should I play Priest?',\r\n            options: 32},\r\n\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                {polls.map(poll=>\r\n                    \r\n                  <div style={{width:'80vh'}}>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    <Segment floated='left' compact color='red' inverted textAlign='left'>\r\n                        {poll.text}\r\n                    </Segment>\r\n                    <br/>\r\n                    \r\n                </div>\r\n                \r\n\r\n                 )}\r\n            </div>\r\n            \r\n      \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}