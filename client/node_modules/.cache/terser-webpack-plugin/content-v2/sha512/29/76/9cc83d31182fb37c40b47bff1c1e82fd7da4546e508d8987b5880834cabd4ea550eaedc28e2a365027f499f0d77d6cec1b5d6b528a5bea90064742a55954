{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\reducers\\\\errorReducer.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\reducers\\\\pollReducer.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\reducers\\\\index.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\actions\\\\types.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\store.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\actions\\\\pollActions.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Spinner.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Polls\\\\Polls.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\SideBar\\\\SideBar.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Pages\\\\PollsPage.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\CreatePoll\\\\CreatePoll.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Pages\\\\PollCreatePage.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\PollDetail\\\\PollDetail.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\PollVote\\\\PollVote.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Pages\\\\PollDetailPage.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\PollsArchive\\\\PollsArchive.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\components\\\\Pages\\\\PollArchivePage.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\App.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\poller\\\\client\\\\src\\\\index.js\"],\"names\":[\"initialState\",\"loading\",\"combineReducers\",\"error\",\"state\",\"arguments\",\"length\",\"undefined\",\"action\",\"type\",\"payload\",\"polls\",\"Object\",\"objectSpread\",\"poll\",\"available\",\"memes\",\"middleware\",\"thunk\",\"store\",\"createStore\",\"rootReducer\",\"compose\",\"applyMiddleware\",\"apply\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"axios\",\"defaults\",\"baseURL\",\"getPolls\",\"dispatch\",\"get\",\"then\",\"res\",\"data\",\"catch\",\"err\",\"getPoll\",\"id\",\"concat\",\"getCheck\",\"Spinner\",\"react_default\",\"a\",\"createElement\",\"Dimmer\",\"active\",\"inverted\",\"Loader\",\"style\",\"marginTop\",\"size\",\"content\",\"Polls\",\"this\",\"props\",\"getShowcase\",\"nextProps\",\"setState\",\"components_Spinner\",\"Header\",\"as\",\"splice\",\"map\",\"Fragment\",\"href\",\"Link\",\"to\",\"_id\",\"Segment\",\"raised\",\"color\",\"title\",\"Component\",\"connect\",\"HorizontalSidebar\",\"_ref\",\"animation\",\"direction\",\"visible\",\"Sidebar\",\"Grid\",\"textAlign\",\"Row\",\"columns\",\"Column\",\"divided\",\"Image\",\"src\",\"VerticalSidebar\",\"_ref2\",\"_React$createElement\",\"_React$createElement2\",\"_React$createElement3\",\"Menu\",\"icon\",\"vertical\",\"width\",\"Item\",\"defineProperty\",\"Icon\",\"name\",\"SidebarExampleTransitions\",\"dimmed\",\"handleAnimationChange\",\"_this\",\"prevState\",\"handleDimmedChange\",\"e\",\"_ref3\",\"checked\",\"handleDirectionChange\",\"_this$state\",\"Pushable\",\"height\",\"SideBar_HorizontalSidebar\",\"SideBar_VerticalSidebar\",\"Pusher\",\"basic\",\"children\",\"PollsPage\",\"SideBar_SidebarExampleTransitions\",\"components_Polls_Polls\",\"CreatePoll\",\"options\",\"public\",\"handleToggle\",\"handleText\",\"i\",\"toConsumableArray\",\"target\",\"value\",\"handleTitle\",\"event\",\"handleDelete\",\"preventDefault\",\"slice\",\"addOption\",\"onSubmit\",\"optionsJSON\",\"isPublic\",\"index\",\"push\",\"text\",\"pollJSON\",\"postPoll\",\"alert\",\"history\",\"_this2\",\"react\",\"Container\",\"Form\",\"Field\",\"placeholder\",\"onChange\",\"question\",\"key\",\"onClick\",\"onFocus\",\"Checkbox\",\"label\",\"Button\",\"post\",\"PollCreatePage\",\"components_CreatePoll_CreatePoll\",\"PollDetail\",\"chartLabels\",\"chartData\",\"voterCount\",\"labels\",\"datasets\",\"backgroundColor\",\"borderColor\",\"borderWidth\",\"hoverBackgroundColor\",\"hoverBorderColor\",\"responsive\",\"maintainAspectRatio\",\"voted\",\"Message\",\"react_chartjs_2_es\",\"Label\",\"views\",\"date\",\"substring\",\"PollVote\",\"vote\",\"_callee\",\"optionID\",\"optionJSON\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"option\",\"putVote\",\"stop\",\"Table\",\"celled\",\"selectable\",\"HeaderCell\",\"Body\",\"Cell\",\"pollID\",\"put\",\"PollDetailPage\",\"match\",\"params\",\"components_PollVote_PollVote\",\"components_PollDetail_PollDetail\",\"PollsArchive\",\"column\",\"itemsPerPage\",\"currentPage\",\"totalItems\",\"activeItem\",\"handleQuestionClick\",\"handleItemClick\",\"handleNextClick\",\"Math\",\"floor\",\"handleBackClick\",\"tableData\",\"Footer\",\"colSpan\",\"floated\",\"pagination\",\"Array\",\"x\",\"PollArchivePage\",\"components_PollsArchive_PollsArchive\",\"App\",\"es\",\"BrowserRouter\",\"className\",\"Route\",\"exact\",\"path\",\"component\",\"Boolean\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { GET_ERRORS } from '../actions/types';\\r\\n\\r\\nconst initialState = {};\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n  switch (action.type) {\\r\\n    case GET_ERRORS:\\r\\n      return action.payload;\\r\\n    default:\\r\\n      return state;\\r\\n  }\\r\\n}\\r\\n\",\"import { GET_POLLS, GET_POLL, GET_POLL_TEST, PUT_VOTE, POST_POLL, GET_CHECK, GET_SHOWCASE  } from '../actions/types';\\r\\n\\r\\nconst initialState = {\\r\\n    loading: false,\\r\\n    \\r\\n};\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n\\r\\n  switch (action.type) {\\r\\n    case GET_POLLS:\\r\\n      return {\\r\\n        ...state,\\r\\n        polls:action.payload\\r\\n    \\r\\n      }\\r\\n      case GET_POLL:\\r\\n      return {\\r\\n        ...state,\\r\\n        poll:action.payload\\r\\n    \\r\\n      }\\r\\n      case PUT_VOTE:\\r\\n      return{\\r\\n        ...state,\\r\\n        poll: action.payload\\r\\n      }\\r\\n      case  POST_POLL:\\r\\n        return{\\r\\n          ...state,\\r\\n          poll: action.payload\\r\\n        }\\r\\n      case GET_CHECK:\\r\\n        return{\\r\\n          ...state,\\r\\n          available: action.payload\\r\\n        }\\r\\n      case GET_POLL_TEST:\\r\\n        return{\\r\\n          ...state,\\r\\n          memes:'memes'\\r\\n        }\\r\\n      case GET_SHOWCASE:\\r\\n        return{\\r\\n          ...state,\\r\\n          polls:action.payload\\r\\n\\r\\n        }\\r\\n\\r\\n    \\r\\n    default:\\r\\n      return state;\\r\\n  }\\r\\n}\",\"import { combineReducers } from 'redux';\\r\\n\\r\\nimport errorReducer from './errorReducer';\\r\\nimport pollReducer from './pollReducer';\\r\\n\\r\\nexport default combineReducers({\\r\\n\\r\\n  error: errorReducer,\\r\\n  polls: pollReducer\\r\\n});\",\"//auth\\r\\nexport const GET_ERRORS = 'GET_ERRORS';\\r\\n\\r\\n// poll actions\\r\\nexport const GET_POLLS = 'GET_POLLS';\\r\\nexport const GET_SHOWCASE = 'GET_SHOWCASE';\\r\\nexport const GET_POLL = 'GET_POLL';\\r\\n\\r\\nexport const GET_POLL_TEST = 'GET_POLL_TEST';\\r\\n\\r\\nexport const PUT_VOTE = 'PUT_VOTE';\\r\\n\\r\\nexport const POST_POLL = 'POST_POLL';\\r\\nexport const GET_CHECK = 'GET_CHECK';\",\"import { createStore, applyMiddleware, compose } from 'redux';\\r\\nimport thunk from 'redux-thunk';\\r\\nimport rootReducer from './reducers';\\r\\n\\r\\nconst initialState = {};\\r\\n\\r\\nconst middleware = [thunk];\\r\\n\\r\\nconst store = createStore(\\r\\n  rootReducer,\\r\\n  initialState,\\r\\n  compose(\\r\\n    applyMiddleware(...middleware),\\r\\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\\r\\n  )\\r\\n);\\r\\n\\r\\nexport default store;\",\"import axios from 'axios';\\r\\nimport {GET_POLLS, GET_POLL, GET_POLL_TEST, GET_ERRORS, PUT_VOTE, POST_POLL, GET_CHECK, GET_SHOWCASE} from './types';\\r\\n\\r\\n\\r\\n\\r\\n//defining base URL\\r\\naxios.defaults.baseURL = 'http://localhost:5000/';\\r\\n\\r\\n\\r\\nexport const getPolls = ()=>dispatch=>{\\r\\n    axios\\r\\n    .get('/api/polls/')\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:GET_POLLS,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'No polls available.',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\n\\r\\nexport const getShowcase = ()=>dispatch=>{\\r\\n    axios\\r\\n    .get('/api/polls/showcase')\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:GET_SHOWCASE,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'No polls available.',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\n\\r\\nexport const getPoll = (id)=>dispatch=>{\\r\\n    axios\\r\\n    .get(`api/polls/${id}`)\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:GET_POLL,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'No poll with that id.',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\nexport const putVote = (pollID, optionID) =>dispatch=>{\\r\\n    axios\\r\\n    .put(`api/polls/vote/${pollID}`, optionID)\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:PUT_VOTE,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'No option with that name.',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\n\\r\\nexport const postPoll = (poll) =>dispatch=>{\\r\\n    axios\\r\\n    .post(\\\"api/polls/\\\", poll)\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:POST_POLL,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'Title required',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\n\\r\\nexport const getCheck = (id)=>dispatch=>{\\r\\n    axios\\r\\n    .get(`api/polls/check/${id}`)\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n        type:GET_CHECK,\\r\\n        payload: res.data,\\r\\n        }))\\r\\n    .catch(err=>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: 'No poll with that id.',\\r\\n        })    \\r\\n    )\\r\\n\\r\\n}\\r\\nexport const getPollTest = (id,history)=>dispatch=>{\\r\\n    history.push(\\\"/\\\");\\r\\n\\r\\n}\",\"import React from \\\"react\\\";\\r\\nimport { Loader, Dimmer } from \\\"semantic-ui-react\\\";\\r\\n\\r\\nconst Spinner = () => (\\r\\n  <Dimmer active inverted>\\r\\n    <Loader style = {{ marginTop:'25vh'}} inverted size=\\\"huge\\\" content={\\\"Loading...\\\"} />\\r\\n  </Dimmer>\\r\\n);\\r\\n\\r\\nexport default Spinner;\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport { Grid, Segment, Header, Container, Pagination } from 'semantic-ui-react'\\r\\nimport {Link} from 'react-router-dom'\\r\\nimport {getPolls, getShowcase} from '../../actions/pollActions';\\r\\nimport { connect } from 'react-redux';\\r\\n\\r\\nimport Spinner from '../Spinner';\\r\\n\\r\\nclass Polls extends Component {\\r\\n    state = {\\r\\n        loading:true\\r\\n    }\\r\\n    componentWillMount(){\\r\\n        this.props.getShowcase();\\r\\n    }\\r\\n    componentWillReceiveProps(nextProps){\\r\\n       \\r\\n        if(nextProps.polls){\\r\\n            this.setState({loading:false});\\r\\n        }\\r\\n    }\\r\\n    render() {\\r\\n  \\r\\n\\r\\n        return (\\r\\n           <div> \\r\\n               {this.state.loading? <Spinner/> :<div>\\r\\n               <Header as='h3'>Showcased Polls</Header>\\r\\n                {this.props.polls.polls && this.props.polls.polls.splice(0,15).map(poll=>\\r\\n                <React.Fragment >\\r\\n                       <a href='#' >\\r\\n                    <Link to = {'/poll/'+poll._id}>\\r\\n                    <Segment raised  color='orange' inverted  size='huge'  style={{marginTop:'15px'}} id = {poll._id}>\\r\\n               \\r\\n                        {poll.title}\\r\\n                    </Segment>\\r\\n                    </Link>\\r\\n                     </a>\\r\\n                    </React.Fragment>\\r\\n                 \\r\\n                \\r\\n\\r\\n\\r\\n                 )}\\r\\n                 </div>\\r\\n                }\\r\\n            \\r\\n          \\r\\n        </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n\\r\\n    polls: state.polls,\\r\\n\\r\\n  });\\r\\n  \\r\\n  export default connect(mapStateToProps, {getPolls, getShowcase})(Polls);\\r\\n\\r\\n  \",\"import PropTypes from 'prop-types'\\r\\nimport React, { Component } from 'react'\\r\\nimport {\\r\\n  Button,\\r\\n  Checkbox,\\r\\n  Grid,\\r\\n  Header,\\r\\n  Icon,\\r\\n  Image,\\r\\n  Menu,\\r\\n  Segment,\\r\\n  Sidebar,\\r\\n  \\r\\n} from 'semantic-ui-react'\\r\\n\\r\\nimport {Link} from 'react-router-dom';\\r\\n\\r\\nimport Polls from '../Polls/Polls'\\r\\n\\r\\nconst HorizontalSidebar = ({ animation, direction, visible }) => (\\r\\n  <Sidebar as={Segment} animation={animation} direction={direction} visible={visible}>\\r\\n    <Grid textAlign='center'>\\r\\n      <Grid.Row columns={1}>\\r\\n        <Grid.Column>\\r\\n          <Header as='h3'>New Content Awaits</Header>\\r\\n        </Grid.Column>\\r\\n      </Grid.Row>\\r\\n      <Grid columns={3} divided>\\r\\n        <Grid.Column>\\r\\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\\r\\n        </Grid.Column>\\r\\n        <Grid.Column>\\r\\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\\r\\n        </Grid.Column>\\r\\n        <Grid.Column>\\r\\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\\r\\n        </Grid.Column>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  </Sidebar>\\r\\n)\\r\\n\\r\\nHorizontalSidebar.propTypes = {\\r\\n  animation: PropTypes.string,\\r\\n  direction: PropTypes.string,\\r\\n  visible: PropTypes.bool,\\r\\n}\\r\\n\\r\\nconst VerticalSidebar = ({ animation, direction, visible }) => (\\r\\n  <Sidebar\\r\\n    as={Menu}\\r\\n    animation={animation}\\r\\n    direction={direction}\\r\\n    icon='labeled'\\r\\n    inverted\\r\\n    vertical\\r\\n    visible={visible}\\r\\n    width='thin'\\r\\n  >\\r\\n       <Menu.Item as='a'  as={Link} to ='/' >\\r\\n      <Icon name='images' color='orange'  size='huge' />\\r\\n      <span style={{color:'orange'}}>BriskPoll</span>\\r\\n    </Menu.Item>\\r\\n    <Menu.Item as={Link} to ='/create'>\\r\\n      <Icon name='pen square'  />\\r\\n      \\r\\n      Create Poll\\r\\n      \\r\\n    </Menu.Item>\\r\\n    <Menu.Item as='a' as={Link} to ='/polls'>\\r\\n      <Icon name='align center' />\\r\\n      View Polls\\r\\n    </Menu.Item>\\r\\n    <Menu.Item as='a' as={Link} to ='/'>\\r\\n      <Icon name='code' />\\r\\n      Source Code\\r\\n    </Menu.Item>\\r\\n  </Sidebar>\\r\\n)\\r\\n\\r\\nVerticalSidebar.propTypes = {\\r\\n  animation: PropTypes.string,\\r\\n  direction: PropTypes.string,\\r\\n  visible: PropTypes.bool,\\r\\n}\\r\\n\\r\\nexport default class SidebarExampleTransitions extends Component {\\r\\n  state = {\\r\\n    animation: 'push',\\r\\n    direction: 'left',\\r\\n    dimmed: false,\\r\\n    visible: true,\\r\\n  }\\r\\n\\r\\n  handleAnimationChange = animation => () =>\\r\\n    this.setState(prevState => ({ animation, visible: !prevState.visible }))\\r\\n\\r\\n  handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked })\\r\\n\\r\\n  handleDirectionChange = direction => () => this.setState({ direction, visible: false })\\r\\n\\r\\n  render() {\\r\\n    const { animation, dimmed, direction, visible } = this.state\\r\\n    const vertical = direction === 'bottom' || direction === 'top'\\r\\n    \\r\\n    return (\\r\\n      <div>\\r\\n\\r\\n\\r\\n  \\r\\n        <Sidebar.Pushable as={Segment} style = {{height:'150vh'}} >\\r\\n          {vertical ? (\\r\\n            <HorizontalSidebar animation={animation} direction={direction} visible={visible} />\\r\\n          ) : null}\\r\\n          {vertical ? null : (\\r\\n            <VerticalSidebar animation={animation} direction={direction} visible={visible} />\\r\\n          )}\\r\\n\\r\\n          <Sidebar.Pusher dimmed={dimmed && visible}>\\r\\n            <Segment basic>\\r\\n              \\r\\n              \\r\\n            {this.props.children}\\r\\n\\r\\n\\r\\n            </Segment>\\r\\n          </Sidebar.Pusher>\\r\\n        </Sidebar.Pushable>\\r\\n      </div>\\r\\n    )\\r\\n  }\\r\\n}\",\"import React, { Component } from 'react'\\r\\nimport SideBar from '../SideBar/SideBar'\\r\\n\\r\\nimport Polls from '../Polls/Polls'\\r\\n\\r\\nexport default class PollsPage extends Component {\\r\\n    \\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <SideBar>\\r\\n                    <Polls/>\\r\\n                </SideBar>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import React, { Component, Fragment } from 'react'\\r\\nimport { Button, Checkbox, Form, Container, Segment, Header, Label } from 'semantic-ui-react'\\r\\nimport {postPoll} from '../../actions/pollActions';\\r\\nimport { connect } from 'react-redux';\\r\\n\\r\\n\\r\\nimport './style.css'\\r\\n\\r\\nclass CreatePoll extends Component {\\r\\n    state = {\\r\\n      title:'',\\r\\n      options: [''],\\r\\n      size: 0,\\r\\n      public: false\\r\\n    }\\r\\n\\r\\n    componentWillReceiveProps(nextProps){\\r\\n      //go to poll when poll created\\r\\n      if(nextProps.poll){\\r\\n        this.props.history.push(`/poll/${nextProps.poll._id}`);\\r\\n      }\\r\\n   \\r\\n    }\\r\\n    handleToggle = () =>{\\r\\n      if(this.state.public)this.setState({public:false});\\r\\n      else this.setState({public:true});\\r\\n    }\\r\\n    handleText = i => e => {\\r\\n      let options = [...this.state.options]\\r\\n      options[i] = e.target.value\\r\\n      this.setState({\\r\\n        options\\r\\n      })\\r\\n    }\\r\\n\\r\\n    handleTitle = (event) =>{\\r\\n      this.setState({title: event.target.value});\\r\\n    }\\r\\n  \\r\\n    handleDelete = i => e => {\\r\\n      e.preventDefault()\\r\\n      let options = [\\r\\n        ...this.state.options.slice(0, i),\\r\\n        ...this.state.options.slice(i + 1)\\r\\n      ]\\r\\n      this.setState({\\r\\n        options\\r\\n      })\\r\\n    }\\r\\n  \\r\\n    addOption = e => {\\r\\n      e.preventDefault()\\r\\n      if(e.target.id == this.state.size){\\r\\n      let options = this.state.options.concat([''])\\r\\n      this.setState({\\r\\n        options,\\r\\n        size: this.state.size +1\\r\\n      })\\r\\n        }\\r\\n    }\\r\\n  \\r\\n    onSubmit = (e) =>{\\r\\n        e.preventDefault();\\r\\n        if(this.state.title === '') {\\r\\n          alert(\\\"Please enter a title.\\\")\\r\\n          return;\\r\\n        }\\r\\n      \\r\\n        const optionsJSON= [];\\r\\n        const title = this.state.title;\\r\\n        const isPublic = this.state.public;\\r\\n\\r\\n        for(const index in this.state.options){\\r\\n          if(this.state.options[index]!==\\\"\\\")\\r\\n          optionsJSON.push({\\\"text\\\":this.state.options[index]});\\r\\n        }\\r\\n        //if all options are blank then give error\\r\\n        if (optionsJSON.length === 0){\\r\\n          alert(\\\"Please enter at least one question.\\\");\\r\\n          return;\\r\\n        }\\r\\n        const pollJSON = {title:title, options: optionsJSON, public: isPublic};\\r\\n\\r\\n        this.props.postPoll(pollJSON);\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n      return (\\r\\n        <Fragment>\\r\\n        \\r\\n          <div>\\r\\n\\r\\n                <Header size='huge' color='orange'>Creating Poll</Header>\\r\\n    <Container>\\r\\n        <Segment  >\\r\\n            <Form>\\r\\n                <Form.Field>\\r\\n             \\r\\n                <input placeholder='Your Question' name = 'title' onChange={this.handleTitle} value={this.state.title} type=\\\"text\\\"/>\\r\\n                \\r\\n                </Form.Field>\\r\\n                <Form.Field >\\r\\n                \\r\\n                {this.state.options.map((question, index) => (\\r\\n            <div key={index}>\\r\\n                \\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                placeholder={'Poll Option #' + (index+1)}\\r\\n                onChange={this.handleText(index)}\\r\\n                value={question}\\r\\n                onClick ={this.addOption}\\r\\n                onFocus ={this.addOption}\\r\\n                id={index}\\r\\n                style={{marginTop:'20px'}}\\r\\n              />\\r\\n           \\r\\n              <br/>\\r\\n            </div>\\r\\n            \\r\\n         \\r\\n          ))}\\r\\n\\r\\n                \\r\\n               \\r\\n                </Form.Field>\\r\\n                <Form.Field>\\r\\n                <Checkbox  label='Public' name='public' onChange={()=>this.handleToggle()} />\\r\\n                </Form.Field>\\r\\n                <Button type='submit' color='orange' size='huge' onClick={this.onSubmit}>Create</Button>\\r\\n            </Form>\\r\\n        </Segment>\\r\\n    </Container>\\r\\n            </div>\\r\\n\\r\\n        </Fragment>\\r\\n      )\\r\\n    }\\r\\n  }\\r\\n  \\r\\nconst mapStateToProps = state => ({\\r\\n\\r\\n  poll: state.polls.poll,\\r\\n\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {postPoll})(CreatePoll);\\r\\n\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport SideBar from '../SideBar/SideBar'\\r\\n\\r\\nimport CreatePoll from '../CreatePoll/CreatePoll'\\r\\n\\r\\nexport default class PollCreatePage extends Component {   \\r\\n    render() {\\r\\n \\r\\n        return (\\r\\n            <div>\\r\\n                <SideBar>\\r\\n                    <CreatePoll history = {this.props.history}/>\\r\\n                </SideBar>\\r\\n              {/*  <SideBar  /> */}               \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport {Segment, Header, Container, Message, Icon, Label } from 'semantic-ui-react'\\r\\nimport { connect } from 'react-redux';\\r\\nimport {getPoll} from '../../actions/pollActions';\\r\\n\\r\\nimport {HorizontalBar} from 'react-chartjs-2'\\r\\n\\r\\nimport Spinner from '../Spinner'\\r\\n\\r\\n\\r\\n \\r\\nclass PollDetail extends Component {\\r\\n  state = {\\r\\n    loading:true,\\r\\n    data:[]\\r\\n  }\\r\\n\\r\\n    componentWillMount(){\\r\\n      this.props.getPoll(this.props.id);\\r\\n    }\\r\\n    componentWillReceiveProps(nextProps){\\r\\n      \\r\\n      const chartLabels = [];\\r\\n      const chartData = [];\\r\\n      for(const index in nextProps.poll.options){\\r\\n      \\r\\n        chartLabels.push(nextProps.poll.options[index].text);\\r\\n        chartData.push(nextProps.poll.options[index].voterCount);\\r\\n      }\\r\\n     \\r\\n      const data={\\r\\n        labels: chartLabels,\\r\\n        datasets: [\\r\\n          {\\r\\n            label: 'Votes',\\r\\n            backgroundColor: 'orange',\\r\\n            borderColor: 'rgba(255,99,132,1)',\\r\\n            borderWidth: 1,\\r\\n            hoverBackgroundColor: 'yellow',\\r\\n            hoverBorderColor: 'yellow',\\r\\n            data: chartData\\r\\n          }\\r\\n        ],\\r\\n        \\r\\n        options:{\\r\\n          responsive: true,\\r\\n          maintainAspectRatio: true,\\r\\n          \\r\\n        },\\r\\n    \\r\\n      \\r\\n      };\\r\\n      this.setState({data:data, loading: false})\\r\\n      \\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div >    \\r\\n              {this.state.loading? <Spinner/> :\\r\\n            <Container>     \\r\\n              {this.props.voted && <Message color='teal'>Your Vote Has Been Recorded!</Message>}\\r\\n    <Header textAlign='center'>{this.props.poll && this.props.poll.title}</Header>\\r\\n    <HorizontalBar data={this.state.data}  height={80} />\\r\\n  \\r\\n \\r\\n  <Label color='white'><Icon color='orange' name='eye'/>{this.props.poll && this.props.poll.views}</Label>\\r\\n  <Label><Icon color='orange' name='calendar'/>{this.props.poll && this.props.poll.date.substring(0,10)}</Label>\\r\\n  <Label><Icon color='orange' name='linkify'/>http://localhost:3000/poll/{this.props.poll && this.props.poll._id}</Label>\\r\\n           </Container>\\r\\n          \\r\\n              }\\r\\n                </div>)\\r\\n    }\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n  poll: state.polls.poll\\r\\n});\\r\\n\\r\\n\\r\\nexport default connect(mapStateToProps, {getPoll})(PollDetail);\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react'\\r\\nimport { connect } from 'react-redux';\\r\\nimport {getPoll, putVote, getCheck} from '../../actions/pollActions';\\r\\n\\r\\nimport { withRouter } from 'react-router-dom';\\r\\n\\r\\n\\r\\nimport {HorizontalBar} from 'react-chartjs-2';\\r\\n\\r\\n \\r\\n\\r\\nclass PollVote extends Component {\\r\\n\\r\\n  componentWillMount(){\\r\\n    this.props.getPoll(this.props.id)\\r\\n  }\\r\\n\\r\\n  vote = async (optionID) =>{\\r\\n    const optionJSON= {\\r\\n      option:optionID\\r\\n    }\\r\\n   \\r\\n    this.props.putVote(this.props.id, optionJSON);\\r\\n  }\\r\\n  componentWillReceiveProps(nextProps){\\r\\n    if(nextProps.poll)\\r\\n      this.props.getCheck(this.props.id);\\r\\n\\r\\n  }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div >             \\r\\n              {this.props.poll &&  <div >  <Header> Should I meme? </Header>\\r\\n     <Table celled selectable size='large'>\\r\\n    <Table.Header>\\r\\n      <Table.Row>\\r\\n        <Table.HeaderCell textAlign='center'>{this.props.poll.title}</Table.HeaderCell>\\r\\n        \\r\\n      </Table.Row>\\r\\n    </Table.Header>\\r\\n    <Table.Body >\\r\\n\\r\\n                {this.props.poll.options&& this.props.poll.options.map(option=>\\r\\n                  <Table.Row >\\r\\n                  <Table.Cell id = {option._id} onClick={()=>{this.vote(option._id)}}>{option.text}</Table.Cell>\\r\\n                </Table.Row>\\r\\n                  )}\\r\\n     \\r\\n    </Table.Body>\\r\\n  </Table>\\r\\n   \\r\\n    </div >  \\r\\n}\\r\\n\\r\\n\\r\\n    \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n\\r\\n  poll: state.polls.poll,\\r\\n\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {getPoll, putVote, getCheck})(PollVote);\\r\\n\\r\\n  \",\"import React, { Component } from 'react'\\r\\nimport SideBar from '../SideBar/SideBar'\\r\\n\\r\\nimport PollDetail from '../PollDetail/PollDetail'\\r\\nimport PollVote from '../PollVote/PollVote'\\r\\n\\r\\nimport {getCheck} from '../../actions/pollActions';\\r\\nimport { connect } from 'react-redux';\\r\\n\\r\\nimport Spinner from '../Spinner';\\r\\n\\r\\nclass PollDetailPage extends Component {\\r\\n\\r\\n    state = {\\r\\n        loading:true\\r\\n\\r\\n    }\\r\\n\\r\\n    componentWillMount(){\\r\\n      \\r\\n        this.props.getCheck(this.props.match.params.id);\\r\\n    }    \\r\\n    componentWillReceiveProps(nextProps){\\r\\n       \\r\\n        if(nextProps.available){\\r\\n            this.setState({loading:false});\\r\\n        }\\r\\n    }\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <SideBar>{\\r\\n                    this.state.loading ? <Spinner/>:  (this.props.available && !this.props.available.voted) ?\\r\\n                    <PollVote id = {this.props.match.params.id} history ={this.props.history}/>\\r\\n                    :\\r\\n                    <PollDetail id = {this.props.match.params.id} voted={this.props.available}  />\\r\\n\\r\\n                }\\r\\n                \\r\\n             \\r\\n                </SideBar>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n\\r\\n    available: state.polls.available,\\r\\n\\r\\n  });\\r\\n  \\r\\n  export default connect(mapStateToProps, {getCheck})(PollDetailPage);\\r\\n\\r\\n  \",\"import React, { Component } from 'react'\\r\\nimport { Icon, Menu, Table, Container, Header } from 'semantic-ui-react'\\r\\nimport {getPolls} from '../../actions/pollActions';\\r\\nimport { connect } from 'react-redux';\\r\\nimport {Link, Router} from 'react-router-dom'\\r\\n\\r\\nimport Spinner from '../Spinner';\\r\\n\\r\\nclass PollsArchive extends Component {\\r\\n    state = {\\r\\n        column: null,\\r\\n        data: [],\\r\\n        direction: null,\\r\\n        itemsPerPage: 15,\\r\\n        currentPage: 0,\\r\\n        totalItems: 0,\\r\\n        activeItem: 0,\\r\\n        loading:true\\r\\n      }\\r\\n      \\r\\n      componentWillMount(){\\r\\n\\r\\n        this.props.getPolls();\\r\\n\\r\\n      }\\r\\n      componentWillReceiveProps(nextProps){\\r\\n        \\r\\n        const tableData = [];\\r\\n\\r\\n        if(nextProps.polls)\\r\\n          {\\r\\n            \\r\\n            for(const index in nextProps.polls){\\r\\n              const title = nextProps.polls[index].title;\\r\\n              const views = nextProps.polls[index].views;\\r\\n              const date = nextProps.polls[index].date.substring(0,10);\\r\\n              const id = nextProps.polls[index]._id;\\r\\n              tableData.push({title:title,views:views,date:date, id:id})\\r\\n            }\\r\\n            this.setState({data:tableData,totalItems: nextProps.polls.length,loading:false});\\r\\n\\r\\n          }\\r\\n          \\r\\n\\r\\n      }\\r\\n    handleQuestionClick = (id)=>{\\r\\n      this.props.history.push(`/poll/${id}`);\\r\\n    }\\r\\n    handleItemClick = (e, { name }) => {\\r\\n        this.setState({ activeItem: name});\\r\\n        \\r\\n    }\\r\\n    handleNextClick = () => {\\r\\n\\r\\n      if((this.state.activeItem!== Math.floor(this.state.totalItems/this.state.itemsPerPage)-1) && (this.state.itemsPerPage < this.state.totalItems))\\r\\n        this.setState({ activeItem: this.state.activeItem+1});\\r\\n  }\\r\\n  handleBackClick = () => {\\r\\n    if((this.state.activeItem!==0)&&(this.state.itemsPerPage < this.state.totalItems) )\\r\\n      this.setState({ activeItem: this.state.activeItem-1});\\r\\n}\\r\\n    render() {\\r\\n       const {data, activeItem} = this.state; \\r\\n\\r\\n        return (this.state.loading ? <Spinner/> :\\r\\n            <Container>\\r\\n              <Header color='orange'>Displaying Polls {this.state.activeItem*this.state.itemsPerPage+1}  to {(this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage}</Header>\\r\\n <Table celled selectable>\\r\\n    <Table.Header>\\r\\n      <Table.Row>\\r\\n        <Table.HeaderCell>Question</Table.HeaderCell>\\r\\n        <Table.HeaderCell>Viewers</Table.HeaderCell>\\r\\n        <Table.HeaderCell>Date</Table.HeaderCell>\\r\\n      </Table.Row>\\r\\n    </Table.Header>\\r\\n    \\r\\n    <Table.Body>\\r\\n    {\\r\\n        data.slice(Math.floor(this.state.activeItem*this.state.itemsPerPage),Math.floor((this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage)).map(question =>\\r\\n          <React.Fragment>\\r\\n          \\r\\n          <Table.Row onClick={()=>this.handleQuestionClick(question.id)}>\\r\\n          <Table.Cell>\\r\\n            {question.title}   \\r\\n         </Table.Cell>\\r\\n         <Table.Cell>{question.views}</Table.Cell>\\r\\n         <Table.Cell>{question.date.substring(0,10)}</Table.Cell>\\r\\n       </Table.Row>\\r\\n       \\r\\n         </React.Fragment>\\r\\n        )\\r\\n      \\r\\n      }\\r\\n     \\r\\n          \\r\\n \\r\\n    </Table.Body >\\r\\n\\r\\n    <Table.Footer>\\r\\n      <Table.Row>\\r\\n        <Table.HeaderCell colSpan='3'>\\r\\n          <Menu floated='right' pagination >\\r\\n            <Menu.Item as='a' icon onClick ={this.handleBackClick}> \\r\\n              <Icon name='chevron left' />\\r\\n            </Menu.Item>\\r\\n            {[...Array(Math.floor(this.state.totalItems/this.state.itemsPerPage))].map((x, index) =>\\r\\n            <Menu.Item  name={index} active={activeItem === index} onClick={this.handleItemClick}>{index+1}</Menu.Item>\\r\\n            )}\\r\\n\\r\\n    \\r\\n            <Menu.Item as='a' icon onClick ={this.handleNextClick}>\\r\\n              <Icon name='chevron right' />\\r\\n            </Menu.Item>\\r\\n          </Menu>\\r\\n        </Table.HeaderCell>\\r\\n      </Table.Row>\\r\\n    </Table.Footer>\\r\\n  </Table>\\r\\n            </Container>\\r\\n        \\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n\\r\\n  polls: state.polls.polls,\\r\\n\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {getPolls})(PollsArchive);\\r\\n\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport SideBar from '../SideBar/SideBar';\\r\\n\\r\\nimport PollArchive from '../PollsArchive/PollsArchive'\\r\\n\\r\\nexport default class PollArchivePage extends Component {\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <SideBar>\\r\\n                    <PollArchive history ={this.props.history} />\\r\\n                </SideBar>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\\nimport { Provider } from \\\"react-redux\\\";\\nimport store from './store';\\n\\n\\nimport PollsPage from './components/Pages/PollsPage';\\n\\nimport PollCreatePage from './components/Pages/PollCreatePage';\\nimport PollDetailPage from './components/Pages/PollDetailPage';\\nimport PollArchivePage from './components/Pages/PollArchivePage';\\n\\nimport 'semantic-ui-css/semantic.min.css'\\n\\n\\nclass App extends Component {\\n\\n  render() {\\n    \\n\\n    return (\\n\\n      <Provider store={store}>\\n        <Router>\\n            <div className=\\\"App\\\"> \\n            \\n             \\n            <Route exact path=\\\"/\\\" component={PollsPage}  />\\n            <div className=\\\"container\\\">\\n              <Route exact path=\\\"/create\\\" component={PollCreatePage} />\\n              <Route path=\\\"/poll/:id\\\" component={PollDetailPage}  />\\n              <Route path=\\\"/polls/\\\" component={PollArchivePage}  />\\n\\n            </div>\\n          \\n          </div>\\n        </Router>\\n      </Provider>\\n    );\\n  }\\n}\\n\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{199:function(e,t,a){e.exports=a(370)},204:function(e,t,a){},206:function(e,t,a){},344:function(e,t,a){},370:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),o=a(57),r=a.n(o),i=(a(204),a(15)),c=a(16),s=a(18),u=a(17),p=a(19),m=(a(206),a(390)),h=a(394),d=a(25),E=a(39),v=a(170),f={},b=a(42),g={loading:!1},O=Object(E.c)({error:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"GET_ERRORS\":return t.payload;default:return e}},polls:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"GET_POLLS\":return Object(b.a)({},e,{polls:t.payload});case\"GET_POLL\":case\"PUT_VOTE\":case\"POST_POLL\":return Object(b.a)({},e,{poll:t.payload});case\"GET_CHECK\":return Object(b.a)({},e,{available:t.payload});case\"GET_POLL_TEST\":return Object(b.a)({},e,{memes:\"memes\"});case\"GET_SHOWCASE\":return Object(b.a)({},e,{polls:t.payload});default:return e}}}),y=[v.a],j=Object(E.e)(O,{},Object(E.d)(E.a.apply(void 0,y),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__())),C=a(37),P=a(392),k=a(395),w=a(391),S=a(393),_=a(371),R=a(388),T=a(168),I=a(381),x=a(43),L=a.n(x);L.a.defaults.baseURL=\"http://localhost:5000/\";var A=function(){return function(e){L.a.get(\"/api/polls/\").then(function(t){return e({type:\"GET_POLLS\",payload:t.data})}).catch(function(t){return e({type:\"GET_ERRORS\",payload:\"No polls available.\"})})}},G=function(e){return function(t){L.a.get(\"api/polls/\".concat(e)).then(function(e){return t({type:\"GET_POLL\",payload:e.data})}).catch(function(e){return t({type:\"GET_ERRORS\",payload:\"No poll with that id.\"})})}},W=function(e){return function(t){L.a.get(\"api/polls/check/\".concat(e)).then(function(e){return t({type:\"GET_CHECK\",payload:e.data})}).catch(function(e){return t({type:\"GET_ERRORS\",payload:\"No poll with that id.\"})})}},N=a(386),D=a(380),H=function(){return l.a.createElement(N.a,{active:!0,inverted:!0},l.a.createElement(D.a,{style:{marginTop:\"25vh\"},inverted:!0,size:\"huge\",content:\"Loading...\"}))},z=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={loading:!0},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.props.getShowcase()}},{key:\"componentWillReceiveProps\",value:function(e){e.polls&&this.setState({loading:!1})}},{key:\"render\",value:function(){return l.a.createElement(\"div\",null,this.state.loading?l.a.createElement(H,null):l.a.createElement(\"div\",null,l.a.createElement(S.a,{as:\"h3\"},\"Showcased Polls\"),this.props.polls.polls&&this.props.polls.polls.splice(0,15).map(function(e){return l.a.createElement(l.a.Fragment,null,l.a.createElement(\"a\",{href:\"#\"},l.a.createElement(I.a,{to:\"/poll/\"+e._id},l.a.createElement(k.a,{raised:!0,color:\"orange\",inverted:!0,size:\"huge\",style:{marginTop:\"15px\"},id:e._id},e.title))))})))}}]),t}(n.Component),B=Object(d.b)(function(e){return{polls:e.polls}},{getPolls:A,getShowcase:function(){return function(e){L.a.get(\"/api/polls/showcase\").then(function(t){return e({type:\"GET_SHOWCASE\",payload:t.data})}).catch(function(t){return e({type:\"GET_ERRORS\",payload:\"No polls available.\"})})}}})(z),V=function(e){var t=e.animation,a=e.direction,n=e.visible;return l.a.createElement(P.a,{as:k.a,animation:t,direction:a,visible:n},l.a.createElement(w.a,{textAlign:\"center\"},l.a.createElement(w.a.Row,{columns:1},l.a.createElement(w.a.Column,null,l.a.createElement(S.a,{as:\"h3\"},\"New Content Awaits\"))),l.a.createElement(w.a,{columns:3,divided:!0},l.a.createElement(w.a.Column,null,l.a.createElement(_.a,{src:\"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"})),l.a.createElement(w.a.Column,null,l.a.createElement(_.a,{src:\"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"})),l.a.createElement(w.a.Column,null,l.a.createElement(_.a,{src:\"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"})))))},M=function(e){var t,a,n,o=e.animation,r=e.direction,i=e.visible;return l.a.createElement(P.a,{as:R.a,animation:o,direction:r,icon:\"labeled\",inverted:!0,vertical:!0,visible:i,width:\"thin\"},l.a.createElement(R.a.Item,(t={as:\"a\"},Object(C.a)(t,\"as\",I.a),Object(C.a)(t,\"to\",\"/\"),t),l.a.createElement(T.a,{name:\"images\",color:\"orange\",size:\"huge\"}),l.a.createElement(\"span\",{style:{color:\"orange\"}},\"BriskPoll\")),l.a.createElement(R.a.Item,{as:I.a,to:\"/create\"},l.a.createElement(T.a,{name:\"pen square\"}),\"Create Poll\"),l.a.createElement(R.a.Item,(a={as:\"a\"},Object(C.a)(a,\"as\",I.a),Object(C.a)(a,\"to\",\"/polls\"),a),l.a.createElement(T.a,{name:\"align center\"}),\"View Polls\"),l.a.createElement(R.a.Item,(n={as:\"a\"},Object(C.a)(n,\"as\",I.a),Object(C.a)(n,\"to\",\"/\"),n),l.a.createElement(T.a,{name:\"code\"}),\"Source Code\"))},F=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={animation:\"push\",direction:\"left\",dimmed:!1,visible:!0},a.handleAnimationChange=function(e){return function(){return a.setState(function(t){return{animation:e,visible:!t.visible}})}},a.handleDimmedChange=function(e,t){var n=t.checked;return a.setState({dimmed:n})},a.handleDirectionChange=function(e){return function(){return a.setState({direction:e,visible:!1})}},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this.state,t=e.animation,a=e.dimmed,n=e.direction,o=e.visible,r=\"bottom\"===n||\"top\"===n;return l.a.createElement(\"div\",null,l.a.createElement(P.a.Pushable,{as:k.a,style:{height:\"150vh\"}},r?l.a.createElement(V,{animation:t,direction:n,visible:o}):null,r?null:l.a.createElement(M,{animation:t,direction:n,visible:o}),l.a.createElement(P.a.Pusher,{dimmed:a&&o},l.a.createElement(k.a,{basic:!0},this.props.children))))}}]),t}(n.Component),U=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(F,null,l.a.createElement(B,null)))}}]),t}(n.Component),Q=a(61),X=a(382),q=a(384),J=a(383),K=a(389),Y=(a(344),function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={title:\"\",options:[\"\"],size:0,public:!1},a.handleToggle=function(){a.state.public?a.setState({public:!1}):a.setState({public:!0})},a.handleText=function(e){return function(t){var n=Object(Q.a)(a.state.options);n[e]=t.target.value,a.setState({options:n})}},a.handleTitle=function(e){a.setState({title:e.target.value})},a.handleDelete=function(e){return function(t){t.preventDefault();var n=[].concat(Object(Q.a)(a.state.options.slice(0,e)),Object(Q.a)(a.state.options.slice(e+1)));a.setState({options:n})}},a.addOption=function(e){if(e.preventDefault(),e.target.id==a.state.size){var t=a.state.options.concat([\"\"]);a.setState({options:t,size:a.state.size+1})}},a.onSubmit=function(e){if(e.preventDefault(),\"\"!==a.state.title){var t=[],n=a.state.title,l=a.state.public;for(var o in a.state.options)\"\"!==a.state.options[o]&&t.push({text:a.state.options[o]});if(0!==t.length){var r={title:n,options:t,public:l};a.props.postPoll(r)}else alert(\"Please enter at least one question.\")}else alert(\"Please enter a title.\")},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){e.poll&&this.props.history.push(\"/poll/\".concat(e.poll._id))}},{key:\"render\",value:function(){var e=this;return l.a.createElement(n.Fragment,null,l.a.createElement(\"div\",null,l.a.createElement(S.a,{size:\"huge\",color:\"orange\"},\"Creating Poll\"),l.a.createElement(X.a,null,l.a.createElement(k.a,null,l.a.createElement(q.a,null,l.a.createElement(q.a.Field,null,l.a.createElement(\"input\",{placeholder:\"Your Question\",name:\"title\",onChange:this.handleTitle,value:this.state.title,type:\"text\"})),l.a.createElement(q.a.Field,null,this.state.options.map(function(t,a){return l.a.createElement(\"div\",{key:a},l.a.createElement(\"input\",{type:\"text\",placeholder:\"Poll Option #\"+(a+1),onChange:e.handleText(a),value:t,onClick:e.addOption,onFocus:e.addOption,id:a,style:{marginTop:\"20px\"}}),l.a.createElement(\"br\",null))})),l.a.createElement(q.a.Field,null,l.a.createElement(J.a,{label:\"Public\",name:\"public\",onChange:function(){return e.handleToggle()}})),l.a.createElement(K.a,{type:\"submit\",color:\"orange\",size:\"huge\",onClick:this.onSubmit},\"Create\"))))))}}]),t}(n.Component)),$=Object(d.b)(function(e){return{poll:e.polls.poll}},{postPoll:function(e){return function(t){L.a.post(\"api/polls/\",e).then(function(e){return t({type:\"POST_POLL\",payload:e.data})}).catch(function(e){return t({type:\"GET_ERRORS\",payload:\"Title required\"})})}}})(Y),Z=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(F,null,l.a.createElement($,{history:this.props.history})))}}]),t}(n.Component),ee=a(387),te=a(167),ae=a(111),ne=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={loading:!0,data:[]},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.props.getPoll(this.props.id)}},{key:\"componentWillReceiveProps\",value:function(e){var t=[],a=[];for(var n in e.poll.options)t.push(e.poll.options[n].text),a.push(e.poll.options[n].voterCount);var l={labels:t,datasets:[{label:\"Votes\",backgroundColor:\"orange\",borderColor:\"rgba(255,99,132,1)\",borderWidth:1,hoverBackgroundColor:\"yellow\",hoverBorderColor:\"yellow\",data:a}],options:{responsive:!0,maintainAspectRatio:!0}};this.setState({data:l,loading:!1})}},{key:\"render\",value:function(){return l.a.createElement(\"div\",null,this.state.loading?l.a.createElement(H,null):l.a.createElement(X.a,null,this.props.voted&&l.a.createElement(ee.a,{color:\"teal\"},\"Your Vote Has Been Recorded!\"),l.a.createElement(S.a,{textAlign:\"center\"},this.props.poll&&this.props.poll.title),l.a.createElement(ae.a,{data:this.state.data,height:80}),l.a.createElement(te.a,{color:\"white\"},l.a.createElement(T.a,{color:\"orange\",name:\"eye\"}),this.props.poll&&this.props.poll.views),l.a.createElement(te.a,null,l.a.createElement(T.a,{color:\"orange\",name:\"calendar\"}),this.props.poll&&this.props.poll.date.substring(0,10)),l.a.createElement(te.a,null,l.a.createElement(T.a,{color:\"orange\",name:\"linkify\"}),\"http://localhost:3000/poll/\",this.props.poll&&this.props.poll._id)))}}]),t}(n.Component),le=Object(d.b)(function(e){return{poll:e.polls.poll}},{getPoll:G})(ne),oe=a(116),re=a.n(oe),ie=a(187),ce=a(385),se=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).vote=function(){var e=Object(ie.a)(re.a.mark(function e(t){var n;return re.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n={option:t},a.props.putVote(a.props.id,n);case 2:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.props.getPoll(this.props.id)}},{key:\"componentWillReceiveProps\",value:function(e){e.poll&&this.props.getCheck(this.props.id)}},{key:\"render\",value:function(){var e=this;return l.a.createElement(\"div\",null,this.props.poll&&l.a.createElement(\"div\",null,\"  \",l.a.createElement(S.a,null,\" Should I meme? \"),l.a.createElement(ce.a,{celled:!0,selectable:!0,size:\"large\"},l.a.createElement(ce.a.Header,null,l.a.createElement(ce.a.Row,null,l.a.createElement(ce.a.HeaderCell,{textAlign:\"center\"},this.props.poll.title))),l.a.createElement(ce.a.Body,null,this.props.poll.options&&this.props.poll.options.map(function(t){return l.a.createElement(ce.a.Row,null,l.a.createElement(ce.a.Cell,{id:t._id,onClick:function(){e.vote(t._id)}},t.text))})))))}}]),t}(n.Component),ue=Object(d.b)(function(e){return{poll:e.polls.poll}},{getPoll:G,putVote:function(e,t){return function(a){L.a.put(\"api/polls/vote/\".concat(e),t).then(function(e){return a({type:\"PUT_VOTE\",payload:e.data})}).catch(function(e){return a({type:\"GET_ERRORS\",payload:\"No option with that name.\"})})}},getCheck:W})(se),pe=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={loading:!0},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.props.getCheck(this.props.match.params.id)}},{key:\"componentWillReceiveProps\",value:function(e){e.available&&this.setState({loading:!1})}},{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(F,null,this.state.loading?l.a.createElement(H,null):this.props.available&&!this.props.available.voted?l.a.createElement(ue,{id:this.props.match.params.id,history:this.props.history}):l.a.createElement(le,{id:this.props.match.params.id,voted:this.props.available})))}}]),t}(n.Component),me=Object(d.b)(function(e){return{available:e.polls.available}},{getCheck:W})(pe),he=function(e){function t(){var e,a;Object(i.a)(this,t);for(var n=arguments.length,l=new Array(n),o=0;o<n;o++)l[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(l)))).state={column:null,data:[],direction:null,itemsPerPage:15,currentPage:0,totalItems:0,activeItem:0,loading:!0},a.handleQuestionClick=function(e){a.props.history.push(\"/poll/\".concat(e))},a.handleItemClick=function(e,t){var n=t.name;a.setState({activeItem:n})},a.handleNextClick=function(){a.state.activeItem!==Math.floor(a.state.totalItems/a.state.itemsPerPage)-1&&a.state.itemsPerPage<a.state.totalItems&&a.setState({activeItem:a.state.activeItem+1})},a.handleBackClick=function(){0!==a.state.activeItem&&a.state.itemsPerPage<a.state.totalItems&&a.setState({activeItem:a.state.activeItem-1})},a}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"componentWillMount\",value:function(){this.props.getPolls()}},{key:\"componentWillReceiveProps\",value:function(e){var t=[];if(e.polls){for(var a in e.polls){var n=e.polls[a].title,l=e.polls[a].views,o=e.polls[a].date.substring(0,10),r=e.polls[a]._id;t.push({title:n,views:l,date:o,id:r})}this.setState({data:t,totalItems:e.polls.length,loading:!1})}}},{key:\"render\",value:function(){var e=this,t=this.state,a=t.data,n=t.activeItem;return this.state.loading?l.a.createElement(H,null):l.a.createElement(X.a,null,l.a.createElement(S.a,{color:\"orange\"},\"Displaying Polls \",this.state.activeItem*this.state.itemsPerPage+1,\"  to \",this.state.activeItem*this.state.itemsPerPage+this.state.itemsPerPage),l.a.createElement(ce.a,{celled:!0,selectable:!0},l.a.createElement(ce.a.Header,null,l.a.createElement(ce.a.Row,null,l.a.createElement(ce.a.HeaderCell,null,\"Question\"),l.a.createElement(ce.a.HeaderCell,null,\"Viewers\"),l.a.createElement(ce.a.HeaderCell,null,\"Date\"))),l.a.createElement(ce.a.Body,null,a.slice(Math.floor(this.state.activeItem*this.state.itemsPerPage),Math.floor(this.state.activeItem*this.state.itemsPerPage+this.state.itemsPerPage)).map(function(t){return l.a.createElement(l.a.Fragment,null,l.a.createElement(ce.a.Row,{onClick:function(){return e.handleQuestionClick(t.id)}},l.a.createElement(ce.a.Cell,null,t.title),l.a.createElement(ce.a.Cell,null,t.views),l.a.createElement(ce.a.Cell,null,t.date.substring(0,10))))})),l.a.createElement(ce.a.Footer,null,l.a.createElement(ce.a.Row,null,l.a.createElement(ce.a.HeaderCell,{colSpan:\"3\"},l.a.createElement(R.a,{floated:\"right\",pagination:!0},l.a.createElement(R.a.Item,{as:\"a\",icon:!0,onClick:this.handleBackClick},l.a.createElement(T.a,{name:\"chevron left\"})),Object(Q.a)(Array(Math.floor(this.state.totalItems/this.state.itemsPerPage))).map(function(t,a){return l.a.createElement(R.a.Item,{name:a,active:n===a,onClick:e.handleItemClick},a+1)}),l.a.createElement(R.a.Item,{as:\"a\",icon:!0,onClick:this.handleNextClick},l.a.createElement(T.a,{name:\"chevron right\"}))))))))}}]),t}(n.Component),de=Object(d.b)(function(e){return{polls:e.polls.polls}},{getPolls:A})(he),Ee=function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,l.a.createElement(F,null,l.a.createElement(de,{history:this.props.history})))}}]),t}(n.Component),ve=(a(366),function(e){function t(){return Object(i.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return l.a.createElement(d.a,{store:j},l.a.createElement(m.a,null,l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(h.a,{exact:!0,path:\"/\",component:U}),l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(h.a,{exact:!0,path:\"/create\",component:Z}),l.a.createElement(h.a,{path:\"/poll/:id\",component:me}),l.a.createElement(h.a,{path:\"/polls/\",component:Ee})))))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(l.a.createElement(ve,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[199,2,1]]]);","extractedComments":[]}