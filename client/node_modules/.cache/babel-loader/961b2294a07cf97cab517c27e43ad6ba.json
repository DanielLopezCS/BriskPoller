{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computePagination = computePagination;\nexports.getOffset = getOffset;\n\nvar createPageObject = function createPageObject(page) {\n  return {\n    page: page,\n    isCurrent: false,\n    isEnd: false,\n    isEllipsis: false,\n    isLowSide: false\n  };\n};\n\nvar createCurrentPageObject = function createCurrentPageObject(page) {\n  var obj = createPageObject(page);\n  obj.isCurrent = true;\n  return obj;\n};\n\nvar createOtherPageObject = function createOtherPageObject(page, isLowSide) {\n  var obj = createPageObject(page);\n  obj.isLowSide = isLowSide;\n  return obj;\n};\n\nvar createEndPageObject = function createEndPageObject(page, isLowSide) {\n  var obj = createOtherPageObject(page, isLowSide);\n  obj.isEnd = true;\n  return obj;\n};\n\nvar createEllipsisPageObject = function createEllipsisPageObject(isLowSide) {\n  var obj = createOtherPageObject(0, isLowSide);\n  obj.isEllipsis = true;\n  return obj;\n};\n\nfunction computePagination(offset, limit, total, reservedPageCount) {\n  var minPage = 1;\n  var maxPage = Math.floor(total / limit) + (total % limit === 0 ? 0 : 1);\n  var currentPage = Math.floor(offset / limit) + 1;\n  var previousPage = currentPage <= minPage ? 0 : currentPage - 1;\n  var nextPage = currentPage >= maxPage ? 0 : currentPage + 1;\n  var pages = []; // previous\n\n  pages.push(createEndPageObject(previousPage, true)); // low\n\n  var lowInnerReservedPageCount = Math.max(reservedPageCount + currentPage - maxPage, 0);\n  var lowInnerEllipsisPage = currentPage - reservedPageCount - lowInnerReservedPageCount - 1;\n  var lowOuterEllipsisPage = minPage + reservedPageCount;\n\n  for (var i = minPage; i < currentPage; i++) {\n    if (i < lowOuterEllipsisPage) {\n      pages.push(createOtherPageObject(i, true));\n    } else {\n      pages.push(i === lowOuterEllipsisPage && i < lowInnerEllipsisPage ? createEllipsisPageObject(true) : createOtherPageObject(i, true));\n\n      for (var j = Math.max(i, lowInnerEllipsisPage) + 1; j < currentPage; j++) {\n        pages.push(createOtherPageObject(j, true));\n      }\n\n      break;\n    }\n  } // current\n\n\n  pages.push(createCurrentPageObject(currentPage)); // high\n\n  var highInnerReservedPageCount = Math.max(reservedPageCount - currentPage + minPage, 0);\n  var highInnerEllipsisPage = currentPage + reservedPageCount + highInnerReservedPageCount + 1;\n  var highOuterEllipsisPage = maxPage - reservedPageCount;\n\n  for (var _i = currentPage + 1; _i <= maxPage; _i++) {\n    if (_i < highInnerEllipsisPage) {\n      pages.push(createOtherPageObject(_i, false));\n    } else {\n      pages.push(_i === highInnerEllipsisPage && _i < highOuterEllipsisPage ? createEllipsisPageObject(false) : createOtherPageObject(_i, false));\n\n      for (var _j = Math.max(_i, highOuterEllipsisPage) + 1; _j <= maxPage; _j++) {\n        pages.push(createOtherPageObject(_j, false));\n      }\n\n      break;\n    }\n  } // next\n\n\n  pages.push(createEndPageObject(nextPage, false));\n  return pages;\n}\n\nfunction getOffset(page, limit) {\n  return (page - 1) * limit;\n}","map":null,"metadata":{},"sourceType":"script"}