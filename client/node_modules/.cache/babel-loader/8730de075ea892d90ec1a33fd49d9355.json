{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\PollVote\\\\PollVote.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getPoll, getPollTest } from '../../actions/pollActions';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nvar PollVote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PollVote, _Component);\n\n  function PollVote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollVote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollVote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.memeMe = function (id) {\n      alert('aaah: ' + id);\n    };\n\n    return _this;\n  }\n\n  _createClass(PollVote, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPoll(this.props.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.poll && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"  \", React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" Should I meme? \"), React.createElement(Table, {\n        celled: true,\n        selectable: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.poll.title))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.poll.options.map(function (option) {\n        return React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          id: option._id,\n          onClick: function onClick() {\n            _this2.memeMe(option._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, option.text));\n      })))));\n    }\n  }]);\n\n  return PollVote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    poll: state.polls.poll\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPoll: getPoll,\n  getPollTest: getPollTest\n})(PollVote);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\PollVote\\PollVote.js"],"names":["React","Component","Button","Checkbox","Form","Container","Segment","Header","Label","Table","connect","getPoll","getPollTest","HorizontalBar","PollVote","memeMe","id","alert","props","poll","title","options","map","option","_id","text","mapStateToProps","state","polls"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,EAA6DC,KAA7D,EAAoEC,KAApE,QAAiF,mBAAjF;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,2BAAnC;AAGA,SAAQC,aAAR,QAA4B,iBAA5B;;IAIMC,Q;;;;;;;;;;;;;;;;;;UAKJC,M,GAAS,UAACC,EAAD,EAAO;AACdC,MAAAA,KAAK,CAAC,WAAWD,EAAZ,CAAL;AACD,K;;;;;;;yCALmB;AAClB,WAAKE,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWF,EAA9B;AACD;;;6BAKU;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWC,IAAX,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR,EAC9B,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,UAAU,MAAxB;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,KAAtD,CADF,CADF,CADC,EAOD,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEa,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,OAAhB,CAAwBC,GAAxB,CAA4B,UAAAC,MAAM;AAAA,eACjC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,EAAE,EAAIA,MAAM,CAACC,GAAzB;AAA8B,UAAA,OAAO,EAAE,mBAAI;AAAC,YAAA,MAAI,CAACT,MAAL,CAAYQ,MAAM,CAACC,GAAnB;AAAwB,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuED,MAAM,CAACE,IAA9E,CADA,CADiC;AAAA,OAAlC,CAFb,CAPC,CAD8B,CADvB,CADJ;AA4BH;;;;EAtCkBxB,S;;AAyCvB,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAEhCR,IAAAA,IAAI,EAAEQ,KAAK,CAACC,KAAN,CAAYT;AAFc,GAAL;AAAA,CAA7B;;AAMA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA,OAAO,EAAPA,OAAD;AAAUC,EAAAA,WAAW,EAAXA;AAAV,CAAlB,CAAP,CAAiDE,QAAjD,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {getPoll, getPollTest} from '../../actions/pollActions';\r\n\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\n \r\n\r\nclass PollVote extends Component {\r\n\r\n  componentWillMount(){\r\n    this.props.getPoll(this.props.id)\r\n  }\r\n  memeMe = (id) =>{\r\n    alert('aaah: ' + id);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div >             \r\n              {this.props.poll &&  <div >  <Header> Should I meme? </Header>\r\n     <Table celled selectable size='large'>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell textAlign='center'>{this.props.poll.title}</Table.HeaderCell>\r\n        \r\n      </Table.Row>\r\n    </Table.Header>\r\n    <Table.Body >\r\n\r\n                {this.props.poll.options.map(option=>\r\n                  <Table.Row >\r\n                  <Table.Cell id = {option._id} onClick={()=>{this.memeMe(option._id)}}>{option.text}</Table.Cell>\r\n                </Table.Row>\r\n                  )}\r\n     \r\n    </Table.Body>\r\n  </Table>\r\n   \r\n    </div >  \r\n}\r\n\r\n\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  poll: state.polls.poll,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPoll, getPollTest})(PollVote);\r\n\r\n  "]},"metadata":{},"sourceType":"module"}