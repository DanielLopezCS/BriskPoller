{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\PollDetail\\\\PollDetail.js\";\nimport React, { Component } from 'react';\nimport { Segment, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getPoll } from '../../actions/pollActions';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport Spinner from '../Spinner';\n\nvar PollDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PollDetail, _Component);\n\n  function PollDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(PollDetail, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPoll(this.props.id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var chartLabels = [];\n      var chartData = [];\n\n      for (var index in nextProps.poll) {\n        chartLabels.push(nextProps.poll.options[index][\"text\"]);\n        chartData.push(nextProps.poll.options[index].voters.size());\n      }\n\n      var data = {\n        labels: chartLabels,\n        datasets: [{\n          label: 'What Should I Roll?',\n          backgroundColor: 'orange',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'yellow',\n          hoverBorderColor: 'yellow',\n          data: chartData\n        }]\n      };\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Header, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Your Question\"), React.createElement(HorizontalBar, {\n        data: this.state.data,\n        height: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Segment.Group, {\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Voters: 500\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Published: 12341\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Bottom\")), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Sharable Link: www.memes.com/123133\"));\n    }\n  }]);\n\n  return PollDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    poll: state.polls.poll\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPoll: getPoll\n})(PollDetail);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\PollDetail\\PollDetail.js"],"names":["React","Component","Segment","Header","connect","getPoll","HorizontalBar","Spinner","PollDetail","state","loading","data","props","id","nextProps","chartLabels","chartData","index","poll","push","options","voters","size","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","setState","mapStateToProps","polls"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AAEA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,OAAOC,OAAP,MAAoB,YAApB;;IAIMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAC,IADF;AAENC,MAAAA,IAAI,EAAC;AAFC,K;;;;;;yCAIc;AAClB,WAAKC,KAAL,CAAWP,OAAX,CAAmB,KAAKO,KAAL,CAAWC,EAA9B;AACD;;;8CACyBC,S,EAAU;AAGlC,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,SAAS,GAAG,EAAlB;;AACA,WAAI,IAAMC,KAAV,IAAmBH,SAAS,CAACI,IAA7B,EAAkC;AAChCH,QAAAA,WAAW,CAACI,IAAZ,CAAiBL,SAAS,CAACI,IAAV,CAAeE,OAAf,CAAuBH,KAAvB,EAA8B,MAA9B,CAAjB;AACAD,QAAAA,SAAS,CAACG,IAAV,CAAeL,SAAS,CAACI,IAAV,CAAeE,OAAf,CAAuBH,KAAvB,EAA8BI,MAA9B,CAAqCC,IAArC,EAAf;AACD;;AAED,UAAMX,IAAI,GAAC;AACTY,QAAAA,MAAM,EAAER,WADC;AAETS,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,qBADT;AAEEC,UAAAA,eAAe,EAAE,QAFnB;AAGEC,UAAAA,WAAW,EAAE,oBAHf;AAIEC,UAAAA,WAAW,EAAE,CAJf;AAKEC,UAAAA,oBAAoB,EAAE,QALxB;AAMEC,UAAAA,gBAAgB,EAAE,QANpB;AAOEnB,UAAAA,IAAI,EAAEK;AAPR,SADQ;AAFD,OAAX;AAeA,WAAKe,QAAL,CAAc;AAACpB,QAAAA,IAAI,EAACA;AAAN,OAAd;AAED;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADQ,EAER,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAhC;AAAuC,QAAA,MAAM,EAAE,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFQ,EAGR,oBAAC,OAAD,CAAS,KAAT;AAAe,QAAA,UAAU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAHQ,EAQR,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CARQ,CADJ;AAaH;;;;EAnDoBV,S;;AAsDzB,IAAM+B,eAAe,GAAG,SAAlBA,eAAkB,CAAAvB,KAAK;AAAA,SAAK;AAChCS,IAAAA,IAAI,EAAET,KAAK,CAACwB,KAAN,CAAYf;AADc,GAAL;AAAA,CAA7B;;AAKA,eAAed,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,OAAO,EAAPA;AAAD,CAAlB,CAAP,CAAoCG,UAApC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Segment, Header } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {getPoll} from '../../actions/pollActions';\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2'\r\n\r\nimport Spinner from '../Spinner'\r\n\r\n\r\n \r\nclass PollDetail extends Component {\r\n  state = {\r\n    loading:true,\r\n    data:[]\r\n  }\r\n    componentWillMount(){\r\n      this.props.getPoll(this.props.id);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n     \r\n      \r\n      const chartLabels = [];\r\n      const chartData = [];\r\n      for(const index in nextProps.poll){\r\n        chartLabels.push(nextProps.poll.options[index][\"text\"]);\r\n        chartData.push(nextProps.poll.options[index].voters.size());\r\n      }\r\n     \r\n      const data={\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'What Should I Roll?',\r\n            backgroundColor: 'orange',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'yellow',\r\n            hoverBorderColor: 'yellow',\r\n            data: chartData\r\n          }\r\n        ]\r\n      \r\n      };\r\n      this.setState({data:data})\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>         \r\n    <Header textAlign='center'>Your Question</Header>\r\n    <HorizontalBar data={this.state.data}  height={100}/>\r\n    <Segment.Group horizontal >\r\n      <Segment>Voters: 500</Segment>\r\n      <Segment>Published: 12341</Segment>\r\n      <Segment>Bottom</Segment>\r\n    </Segment.Group>\r\n    <Segment>Sharable Link: www.memes.com/123133</Segment>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  poll: state.polls.poll\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getPoll})(PollDetail);\r\n"]},"metadata":{},"sourceType":"module"}