{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\Test\\\\Dynamic.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react';\n\nvar ListOfQuestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListOfQuestions, _Component);\n\n  function ListOfQuestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListOfQuestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListOfQuestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      questions: ['hello']\n    };\n\n    _this.handleText = function (i) {\n      return function (e) {\n        var questions = _toConsumableArray(_this.state.questions);\n\n        questions[i] = e.target.value;\n\n        _this.setState({\n          questions: questions\n        });\n      };\n    };\n\n    _this.handleDelete = function (i) {\n      return function (e) {\n        e.preventDefault();\n        var questions = [].concat(_toConsumableArray(_this.state.questions.slice(0, i)), _toConsumableArray(_this.state.questions.slice(i + 1)));\n\n        _this.setState({\n          questions: questions\n        });\n      };\n    };\n\n    _this.addQuestion = function (e) {\n      e.preventDefault();\n\n      var questions = _this.state.questions.concat(['']);\n\n      _this.setState({\n        questions: questions\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ListOfQuestions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"MEMES!\"), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Your Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.questions.map(function (question, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          onChange: _this2.handleText(index),\n          value: question,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      }), React.createElement(\"button\", {\n        onClick: this.addQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Add New Question\")), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        label: \"Public\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return ListOfQuestions;\n}(Component);\n\nexport { ListOfQuestions as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\Test\\Dynamic.js"],"names":["React","Component","Fragment","Button","Checkbox","Form","Container","Segment","Header","ListOfQuestions","state","questions","handleText","i","e","target","value","setState","handleDelete","preventDefault","slice","addQuestion","concat","map","question","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,QAAmE,mBAAnE;;IAEqBC,e;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,CAAC,OAAD;AADL,K;;UAIRC,U,GAAa,UAAAC,CAAC;AAAA,aAAI,UAAAC,CAAC,EAAI;AACrB,YAAIH,SAAS,sBAAO,MAAKD,KAAL,CAAWC,SAAlB,CAAb;;AACAA,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAeC,CAAC,CAACC,MAAF,CAASC,KAAxB;;AACA,cAAKC,QAAL,CAAc;AACZN,UAAAA,SAAS,EAATA;AADY,SAAd;AAGD,OANa;AAAA,K;;UAQdO,Y,GAAe,UAAAL,CAAC;AAAA,aAAI,UAAAC,CAAC,EAAI;AACvBA,QAAAA,CAAC,CAACK,cAAF;AACA,YAAIR,SAAS,gCACR,MAAKD,KAAL,CAAWC,SAAX,CAAqBS,KAArB,CAA2B,CAA3B,EAA8BP,CAA9B,CADQ,sBAER,MAAKH,KAAL,CAAWC,SAAX,CAAqBS,KAArB,CAA2BP,CAAC,GAAG,CAA/B,CAFQ,EAAb;;AAIA,cAAKI,QAAL,CAAc;AACZN,UAAAA,SAAS,EAATA;AADY,SAAd;AAGD,OATe;AAAA,K;;UAWhBU,W,GAAc,UAAAP,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAIR,SAAS,GAAG,MAAKD,KAAL,CAAWC,SAAX,CAAqBW,MAArB,CAA4B,CAAC,EAAD,CAA5B,CAAhB;;AACA,YAAKL,QAAL,CAAc;AACZN,QAAAA,SAAS,EAATA;AADY,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFN,EAGN,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAO,QAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKD,KAAL,CAAWC,SAAX,CAAqBY,GAArB,CAAyB,UAACC,QAAD,EAAWC,KAAX;AAAA,eAC9B;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAE,MAAI,CAACb,UAAL,CAAgBa,KAAhB,CAFZ;AAGE,UAAA,KAAK,EAAED,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAD8B;AAAA,OAAzB,CAFD,EAYN;AAAQ,QAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZM,CALJ,EAsBI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAtBJ,EAyBI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ,CADJ,CADJ,CAHM,CAFF,CADF;AAyCD;;;;EA1EwCpB,S;;SAAxBQ,e","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react'\r\n\r\nexport default class ListOfQuestions extends Component {\r\n    state = {\r\n      questions: ['hello']\r\n    }\r\n  \r\n    handleText = i => e => {\r\n      let questions = [...this.state.questions]\r\n      questions[i] = e.target.value\r\n      this.setState({\r\n        questions\r\n      })\r\n    }\r\n  \r\n    handleDelete = i => e => {\r\n      e.preventDefault()\r\n      let questions = [\r\n        ...this.state.questions.slice(0, i),\r\n        ...this.state.questions.slice(i + 1)\r\n      ]\r\n      this.setState({\r\n        questions\r\n      })\r\n    }\r\n  \r\n    addQuestion = e => {\r\n      e.preventDefault()\r\n      let questions = this.state.questions.concat([''])\r\n      this.setState({\r\n        questions\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        \r\n          <div>\r\n\r\n                <Header >MEMES!</Header>\r\n    <Container>\r\n        <Segment>\r\n            <Form>\r\n                <Form.Field>\r\n               \r\n                <input placeholder='Your Question' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n\r\n                {this.state.questions.map((question, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"text\"\r\n                onChange={this.handleText(index)}\r\n                value={question}\r\n              />\r\n            </div>\r\n         \r\n          ))}\r\n          <button onClick={this.addQuestion}>Add New Question</button>\r\n\r\n                \r\n               \r\n                </Form.Field>\r\n                <Form.Field>\r\n                <Checkbox  label='Public' />\r\n                </Form.Field>\r\n                <Button type='submit'>Submit</Button>\r\n            </Form>\r\n        </Segment>\r\n    </Container>\r\n            </div>\r\n\r\n        </Fragment>\r\n      )\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}