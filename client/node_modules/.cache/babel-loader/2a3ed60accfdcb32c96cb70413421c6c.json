{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _semanticUiReact = require('semantic-ui-react');\n\nvar _core = require('./core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar validateNumber = function validateNumber(min) {\n  return function (props, propName, componentName) {\n    var value = props[propName];\n    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n    if (type !== 'number') {\n      return new Error('Failed prop type: Invalid prop `' + propName + '` of type `' + type + '` supplied to `' + componentName + '`, expected `number`.');\n    }\n\n    var intValue = parseInt(value, 10);\n\n    if (intValue < min) {\n      return new Error('Failed prop value: Invalid prop `' + propName + '` of value `' + value + '` supplied to `' + componentName + '`, expected a number greater than or equal to `' + min + '`.');\n    }\n  };\n};\n\nvar Pagination = function (_React$PureComponent) {\n  _inherits(Pagination, _React$PureComponent);\n\n  function Pagination() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Pagination);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (targetPage) {\n      return function (e, props) {\n        _this.props.onClick && _this.props.onClick(e, props, (0, _core.getOffset)(targetPage, _this.props.limit));\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Pagination, [{\n    key: 'renderButtons',\n    value: function renderButtons() {\n      var _this2 = this;\n\n      var _props = this.props,\n          offset = _props.offset,\n          limit = _props.limit,\n          total = _props.total,\n          reduced = _props.reduced,\n          previousPageAnimated = _props.previousPageAnimated,\n          previousPageChildren = _props.previousPageChildren,\n          previousPageContent = _props.previousPageContent,\n          previousPageIcon = _props.previousPageIcon,\n          previousPageIconPosition = _props.previousPageIconPosition,\n          nextPageAnimated = _props.nextPageAnimated,\n          nextPageChildren = _props.nextPageChildren,\n          nextPageContent = _props.nextPageContent,\n          nextPageIcon = _props.nextPageIcon,\n          nextPageIconPosition = _props.nextPageIconPosition;\n      return (0, _core.computePagination)(offset, limit, total, reduced ? 1 : 2).map(function (o) {\n        if (o.isCurrent) {\n          return _this2.renderCurrentButton(o.page);\n        } else if (o.isEnd) {\n          if (o.isLowSide) {\n            return _this2.renderEndButton(o.page, 'pr', {\n              animated: previousPageAnimated,\n              children: previousPageChildren,\n              content: previousPageContent,\n              defaultChildren: '<',\n              icon: previousPageIcon,\n              iconPosition: previousPageIconPosition\n            });\n          } else {\n            return _this2.renderEndButton(o.page, 'nx', {\n              animated: nextPageAnimated,\n              children: nextPageChildren,\n              content: nextPageContent,\n              defaultChildren: '>',\n              icon: nextPageIcon,\n              iconPosition: nextPageIconPosition\n            });\n          }\n        } else if (o.isEllipsis) {\n          return _this2.renderEllipsisButton(o.isLowSide ? 'le' : 'he');\n        }\n\n        return _this2.renderOtherButton(o.page);\n      });\n    }\n  }, {\n    key: 'renderCurrentButton',\n    value: function renderCurrentButton(targetPage) {\n      var disabled = this.props.disabled || this.props.total <= 0;\n      return _react2.default.createElement(_semanticUiReact.Button, {\n        active: true,\n        basic: this.props.basic,\n        children: '' + targetPage,\n        className: 'currentPage',\n        color: this.props.currentPageColor || this.props.color,\n        compact: this.props.compact,\n        disabled: disabled,\n        inverted: this.props.inverted,\n        key: 'cr' + targetPage,\n        negative: this.props.currentPageNegative || this.props.negative,\n        positive: this.props.currentPagePositive || this.props.positive,\n        primary: this.props.currentPagePrimary || this.props.primary,\n        secondary: this.props.currentPageSecondary || this.props.secondary,\n        style: this.props.currentPageStyle,\n        tabIndex: disabled ? null : this.props.tabIndex\n      });\n    }\n  }, {\n    key: 'renderOtherButton',\n    value: function renderOtherButton(targetPage) {\n      var children = '' + targetPage;\n      var disabled = this.props.disabled || this.props.total <= 0;\n      return _react2.default.createElement(_semanticUiReact.Button, {\n        basic: this.props.basic,\n        children: children,\n        className: 'otherPage',\n        color: this.props.otherPageColor || this.props.color,\n        compact: this.props.compact,\n        disabled: disabled,\n        inverted: this.props.inverted,\n        key: children,\n        negative: this.props.otherPageNegative || this.props.negative,\n        onClick: this.handleClick(targetPage),\n        positive: this.props.otherPagePositive || this.props.positive,\n        primary: this.props.otherPagePrimary || this.props.primary,\n        secondary: this.props.otherPageSecondary || this.props.secondary,\n        style: this.props.otherPageStyle,\n        tabIndex: disabled ? null : this.props.tabIndex\n      });\n    }\n  }, {\n    key: 'renderEllipsisButton',\n    value: function renderEllipsisButton(key) {\n      return _react2.default.createElement(_semanticUiReact.Button, {\n        basic: this.props.basic,\n        disabled: true,\n        children: '...',\n        className: 'otherPage',\n        color: this.props.otherPageColor || this.props.color,\n        compact: this.props.compact,\n        inverted: this.props.inverted,\n        key: key,\n        negative: this.props.otherPageNegative || this.props.negative,\n        positive: this.props.otherPagePositive || this.props.positive,\n        primary: this.props.otherPagePrimary || this.props.primary,\n        secondary: this.props.otherPageSecondary || this.props.secondary,\n        style: this.props.otherPageStyle\n      });\n    }\n  }, {\n    key: 'renderEndButton',\n    value: function renderEndButton(targetPage, key, props) {\n      var disabled = this.props.disabled || this.props.total <= 0 || targetPage <= 0;\n      var hasChildren = !(props.children == null || Array.isArray(props.children) && props.children.length === 0);\n      var defaultChildren = !props.children && !props.content && !props.icon ? props.defaultChildren : null;\n      return _react2.default.createElement(_semanticUiReact.Button, {\n        animated: props.animated,\n        basic: this.props.basic,\n        children: defaultChildren || (hasChildren ? props.children : null),\n        className: 'otherPage',\n        color: this.props.otherPageColor || this.props.color,\n        compact: this.props.compact,\n        content: hasChildren ? null : props.content,\n        disabled: disabled,\n        icon: hasChildren ? null : props.icon,\n        inverted: this.props.inverted,\n        key: key,\n        labelPosition: props.iconPosition,\n        negative: this.props.otherPageNegative || this.props.negative,\n        onClick: this.handleClick(targetPage),\n        positive: this.props.otherPagePositive || this.props.positive,\n        primary: this.props.otherPagePrimary || this.props.primary,\n        secondary: this.props.otherPageSecondary || this.props.secondary,\n        style: this.props.otherPageStyle,\n        tabIndex: disabled ? null : this.props.tabIndex\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          as = _props2.as,\n          attached = _props2.attached,\n          basic = _props2.basic,\n          className = _props2.className,\n          compact = _props2.compact,\n          floated = _props2.floated,\n          fluid = _props2.fluid,\n          inverted = _props2.inverted,\n          size = _props2.size,\n          vertical = _props2.vertical,\n          style = _props2.style;\n      return _react2.default.createElement(_semanticUiReact.Button.Group, {\n        as: as,\n        attached: attached,\n        basic: basic,\n        className: 'semantic-ui-react-button-pagination' + (className ? ' ' + className : ''),\n        compact: compact,\n        floated: floated,\n        fluid: fluid,\n        inverted: inverted,\n        size: size,\n        vertical: vertical,\n        style: style\n      }, this.renderButtons());\n    }\n  }]);\n\n  return Pagination;\n}(_react2.default.PureComponent);\n\nPagination.propTypes = {\n  offset: validateNumber(0),\n  limit: validateNumber(1),\n  total: validateNumber(0),\n  as: _semanticUiReact.Button.Group.propTypes.as,\n  attached: _semanticUiReact.Button.Group.propTypes.attached,\n  basic: _semanticUiReact.Button.propTypes.basic,\n  className: _semanticUiReact.Button.Group.propTypes.className,\n  color: _semanticUiReact.Button.propTypes.color,\n  compact: _semanticUiReact.Button.propTypes.compact,\n  currentPageColor: _semanticUiReact.Button.propTypes.color,\n  currentPageNegative: _semanticUiReact.Button.propTypes.negative,\n  currentPagePositive: _semanticUiReact.Button.propTypes.positive,\n  currentPagePrimary: _semanticUiReact.Button.propTypes.primary,\n  currentPageSecondary: _semanticUiReact.Button.propTypes.secondary,\n  currentPageStyle: _propTypes2.default.object,\n  disabled: _semanticUiReact.Button.propTypes.disabled,\n  floated: _semanticUiReact.Button.Group.propTypes.floated,\n  fluid: _semanticUiReact.Button.Group.propTypes.fluid,\n  inverted: _semanticUiReact.Button.propTypes.inverted,\n  negative: _semanticUiReact.Button.propTypes.negative,\n  nextPageAnimated: _semanticUiReact.Button.propTypes.animated,\n  nextPageChildren: _semanticUiReact.Button.propTypes.children,\n  nextPageContent: _semanticUiReact.Button.propTypes.content,\n  nextPageIcon: _semanticUiReact.Button.propTypes.icon,\n  nextPageIconPosition: _semanticUiReact.Button.propTypes.labelPosition,\n  onClick: _semanticUiReact.Button.propTypes.onClick,\n  otherPageColor: _semanticUiReact.Button.propTypes.color,\n  otherPageNegative: _semanticUiReact.Button.propTypes.negative,\n  otherPagePositive: _semanticUiReact.Button.propTypes.positive,\n  otherPagePrimary: _semanticUiReact.Button.propTypes.primary,\n  otherPageSecondary: _semanticUiReact.Button.propTypes.secondary,\n  otherPageStyle: _propTypes2.default.object,\n  positive: _semanticUiReact.Button.propTypes.positive,\n  previousPageAnimated: _semanticUiReact.Button.propTypes.animated,\n  previousPageChildren: _semanticUiReact.Button.propTypes.children,\n  previousPageContent: _semanticUiReact.Button.propTypes.content,\n  previousPageIcon: _semanticUiReact.Button.propTypes.icon,\n  previousPageIconPosition: _semanticUiReact.Button.propTypes.labelPosition,\n  primary: _semanticUiReact.Button.propTypes.primary,\n  secondary: _semanticUiReact.Button.propTypes.secondary,\n  size: _semanticUiReact.Button.Group.propTypes.size,\n  vertical: _semanticUiReact.Button.Group.propTypes.vertical,\n  reduced: _propTypes2.default.bool,\n  style: _propTypes2.default.object,\n  tabIndex: _semanticUiReact.Button.propTypes.tabIndex\n};\nPagination.defaultProps = {\n  basic: false,\n  compact: false,\n  currentPageNegative: false,\n  currentPagePositive: false,\n  currentPagePrimary: false,\n  currentPageSecondary: false,\n  disabled: false,\n  fluid: false,\n  inverted: false,\n  negative: false,\n  otherPageNegative: false,\n  otherPagePositive: false,\n  otherPagePrimary: false,\n  otherPageSecondary: false,\n  positive: false,\n  primary: false,\n  secondary: false,\n  vertical: false,\n  reduced: false\n};\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}