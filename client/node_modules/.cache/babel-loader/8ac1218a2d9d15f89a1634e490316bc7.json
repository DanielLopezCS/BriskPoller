{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\Test\\\\Test.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react';\n\nvar Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test, _Component);\n\n  function Test() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Test)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      options: [{\n        text: 'option 1',\n        id: 1\n      }],\n      size: 1\n    };\n\n    _this.addOption = function (e) {\n      if (e.target.id == _this.state.size) {\n        var option = {\n          text: 'memes #1',\n          id: _this.state.size + 1\n        };\n\n        _this.setState({\n          options: [].concat(_toConsumableArray(_this.state.options), [option]),\n          size: _this.state.size + 1\n        });\n      }\n    };\n\n    _this.onTextChange = function (e, index) {\n      _this.setState(_defineProperty({\n        //set the changed state...\n        countries: _this.state.options\n      }, _this.state.options[index], e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          options = _this$state.options,\n          size = _this$state.size;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"MEMES!\"), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Your Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.options.map(function (option, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          placeholder: \"Poll Option #1\",\n          onChange: function onChange(e) {\n            return _this2.onTextChange(e, index);\n          },\n          onClick: _this2.addOption,\n          name: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        label: \"Public\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport { Test as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\Test\\Test.js"],"names":["React","Component","Button","Checkbox","Form","Container","Segment","Header","Test","state","options","text","id","size","addOption","e","target","option","setState","onTextChange","index","countries","value","map"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,QAAmE,mBAAnE;;IAGqBC,I;;;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AACJC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,EAAE,EAAC;AAAtB,OAAD,CADJ;AAEJC,MAAAA,IAAI,EAAE;AAFF,K;;UAORC,S,GAAW,UAACC,CAAD,EAAM;AAEb,UAAGA,CAAC,CAACC,MAAF,CAASJ,EAAT,IAAe,MAAKH,KAAL,CAAWI,IAA7B,EAAkC;AAC9B,YAAMI,MAAM,GAAG;AACXN,UAAAA,IAAI,EAAC,UADM;AAEXC,UAAAA,EAAE,EAAE,MAAKH,KAAL,CAAWI,IAAX,GAAkB;AAFX,SAAf;;AAIA,cAAKK,QAAL,CAAc;AAAER,UAAAA,OAAO,+BAAM,MAAKD,KAAL,CAAWC,OAAjB,IAA0BO,MAA1B,EAAT;AAA6CJ,UAAAA,IAAI,EAAE,MAAKJ,KAAL,CAAWI,IAAX,GAAgB;AAAnE,SAAd;AACH;AAEJ,K;;UAEDM,Y,GAAe,UAACJ,CAAD,EAAGK,KAAH,EAAa;AAExB,YAAKF,QAAL;AACI;AACAG,QAAAA,SAAS,EAAE,MAAKZ,KAAL,CAAWC;AAF1B,SAGK,MAAKD,KAAL,CAAWC,OAAX,CAAmBU,KAAnB,CAHL,EAGiCL,CAAC,CAACC,MAAF,CAASM,KAH1C;AAKH,K;;;;;;;6BAGQ;AAAA;;AAAA,wBACmB,KAAKb,KADxB;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWG,IADX,eACWA,IADX;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAER,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAO,QAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,KAAKJ,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAuB,UAACN,MAAD,EAAQG,KAAR,EAAgB;AACnC,eACI;AAAK,UAAA,GAAG,EAAIA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,WAAW,EAAC,gBAAnB;AAAqC,UAAA,QAAQ,EAAE,kBAACL,CAAD;AAAA,mBAAM,MAAI,CAACI,YAAL,CAAkBJ,CAAlB,EAAoBK,KAApB,CAAN;AAAA,WAA/C;AAAkF,UAAA,OAAO,EAAG,MAAI,CAACN,SAAjG;AAA6G,UAAA,IAAI,EAAC,GAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAMH,OAPD,CAHJ,CALJ,EAoBI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CApBJ,EAuBI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBJ,CADJ,CADJ,CAFQ,CADJ;AAkCH;;;;EApE6Bb,S;;SAAbO,I","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react'\r\n\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        options:[{text: 'option 1', id:1}],\r\n        size: 1,\r\n\r\n    };\r\n\r\n  \r\n    addOption= (e) =>{\r\n\r\n        if(e.target.id == this.state.size){            \r\n            const option = {\r\n                text:'memes #1',\r\n                id: this.state.size + 1\r\n            };  \r\n            this.setState({ options: [...this.state.options, option ], size: this.state.size+1 }) \r\n        }\r\n    \r\n    }\r\n\r\n    onTextChange = (e,index) => {\r\n\r\n        this.setState({\r\n            //set the changed state...\r\n            countries: this.state.options,\r\n            [this.state.options[index]]: e.target.value\r\n          })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {options, size} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Header >MEMES!</Header>\r\n    <Container>\r\n        <Segment>\r\n            <Form>\r\n                <Form.Field>\r\n               \r\n                <input placeholder='Your Question' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n\r\n                {\r\n                    this.state.options.map((option,index)=>{\r\n                        return(\r\n                            <div key = {index}>\r\n                                <input placeholder='Poll Option #1'  onChange={(e)=> this.onTextChange(e,index)}  onClick={ this.addOption}  name='1' />\r\n  \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n               \r\n                </Form.Field>\r\n                <Form.Field>\r\n                <Checkbox  label='Public' />\r\n                </Form.Field>\r\n                <Button type='submit'>Submit</Button>\r\n            </Form>\r\n        </Segment>\r\n    </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}