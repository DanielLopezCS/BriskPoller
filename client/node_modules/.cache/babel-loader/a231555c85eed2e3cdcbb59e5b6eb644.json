{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\PollsArchive\\\\PollsArchive.js\";\nimport React, { Component } from 'react';\nimport { Icon, Label, Menu, Table, Container, Header } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { getPolls } from '../../actions/pollActions';\nimport { connect } from 'react-redux';\n\nvar PollsArchive =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PollsArchive, _Component);\n\n  function PollsArchive() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollsArchive);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollsArchive)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      itemsPerPage: 10,\n      currentPage: 0,\n      totalItems: 50,\n      activeItem: 0\n    };\n\n    _this.handlePageClick = function (page) {};\n\n    _this.handleNextclick = function () {};\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n\n      _this.setState({\n        activeItem: name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PollsArchive, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPolls();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var tableData = [];\n\n      if (nextProps.polls) {\n        for (var index in nextProps.polls) {\n          var title = nextProps.polls[index].title;\n          var views = nextProps.polls[index].views;\n          var date = nextProps.polls[index].date.substring(0, 10);\n          tableData.push({\n            title: title,\n            views: views,\n            date: date\n          });\n        }\n\n        alert(nextProps.polls.length);\n        this.setState({\n          totalItems: nextProps.polls.length\n        });\n      }\n\n      this.setState({\n        data: tableData\n      });\n    } //pagination methods\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          activeItem = _this$state.activeItem;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Header, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"SPLICING FROM \", this.state.activeItem * this.state.itemsPerPage, \"  TO \", this.state.activeItem * this.state.itemsPerPage + this.state.itemsPerPage), React.createElement(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Question\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Viewers\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Date\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data.slice(this.state.activeItem * this.state.itemsPerPage, this.state.activeItem * this.state.itemsPerPage + this.state.itemsPerPage).map(function (question) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, question.title), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, question.views), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, question.date.substring(0, 10))));\n      })), React.createElement(Table.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        floated: \"right\",\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"chevron left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), _toConsumableArray(Array(this.state.totalItems / this.state.itemsPerPage)).map(function (x, index) {\n        return React.createElement(Menu.Item, {\n          name: index,\n          active: activeItem === index,\n          onClick: _this2.handleItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, index + 1);\n      }), React.createElement(Menu.Item, {\n        as: \"a\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"chevron right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return PollsArchive;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    polls: state.polls.polls\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPolls: getPolls\n})(PollsArchive);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\PollsArchive\\PollsArchive.js"],"names":["React","Component","Icon","Label","Menu","Table","Container","Header","_","getPolls","connect","PollsArchive","state","column","data","direction","itemsPerPage","currentPage","totalItems","activeItem","handlePageClick","page","handleNextclick","handleItemClick","e","name","setState","props","nextProps","tableData","polls","index","title","views","date","substring","push","alert","length","slice","map","question","Array","x","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Icon, Label, Menu, Table, Container, Header } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport {getPolls} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass PollsArchive extends Component {\r\n    state = {\r\n        column: null,\r\n        data: [],\r\n        direction: null,\r\n        itemsPerPage: 10,\r\n        currentPage: 0,\r\n        totalItems: 50,\r\n        activeItem: 0,\r\n      }\r\n      \r\n      componentWillMount(){\r\n\r\n        this.props.getPolls();\r\n\r\n\r\n      }\r\n      componentWillReceiveProps(nextProps){\r\n        \r\n        const tableData = [];\r\n\r\n        if(nextProps.polls)\r\n          {\r\n            \r\n            for(const index in nextProps.polls){\r\n              const title = nextProps.polls[index].title;\r\n              const views = nextProps.polls[index].views;\r\n              const date = nextProps.polls[index].date.substring(0,10);\r\n              tableData.push({title:title,views:views,date:date})\r\n            }\r\n            alert(nextProps.polls.length);\r\n            this.setState({totalItems: nextProps.polls.length})\r\n\r\n          }\r\n          \r\n          this.setState({data:tableData});\r\n\r\n      }\r\n      //pagination methods\r\n      handlePageClick = (page) =>{\r\n\r\n      }\r\n      handleNextclick = () =>{\r\n\r\n      }\r\n      handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name});\r\n        \r\n    }\r\n\r\n    render() {\r\n       const {data, activeItem} = this.state; \r\n\r\n        return (\r\n            <Container>\r\n              <Header color='orange'>SPLICING FROM {this.state.activeItem*this.state.itemsPerPage}  TO {(this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage}</Header>\r\n <Table celled>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>Question</Table.HeaderCell>\r\n        <Table.HeaderCell>Viewers</Table.HeaderCell>\r\n        <Table.HeaderCell>Date</Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n    \r\n    <Table.Body>\r\n    {\r\n        data.slice(this.state.activeItem*this.state.itemsPerPage,(this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage).map(question =>\r\n          <React.Fragment>\r\n          <Table.Row>\r\n          <Table.Cell>\r\n            {question.title}   \r\n         </Table.Cell>\r\n         <Table.Cell>{question.views}</Table.Cell>\r\n         <Table.Cell>{question.date.substring(0,10)}</Table.Cell>\r\n       </Table.Row>\r\n      \r\n         </React.Fragment>\r\n        )\r\n      \r\n      }\r\n     \r\n          \r\n \r\n    </Table.Body>\r\n\r\n    <Table.Footer>\r\n      <Table.Row>\r\n        <Table.HeaderCell colSpan='3'>\r\n          <Menu floated='right' pagination>\r\n            <Menu.Item as='a' icon>\r\n              <Icon name='chevron left' />\r\n            </Menu.Item>\r\n            {[...Array(this.state.totalItems/this.state.itemsPerPage)].map((x, index) =>\r\n            <Menu.Item  name={index} active={activeItem === index} onClick={this.handleItemClick}>{index+1}</Menu.Item>\r\n            )}\r\n\r\n    \r\n            <Menu.Item as='a' icon>\r\n              <Icon name='chevron right' />\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Footer>\r\n  </Table>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  polls: state.polls.polls,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPolls})(PollsArchive);\r\n\r\n"]},"metadata":{},"sourceType":"module"}