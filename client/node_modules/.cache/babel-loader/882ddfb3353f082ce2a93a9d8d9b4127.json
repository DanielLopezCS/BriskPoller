{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\PollVote\\\\PollVote.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getPoll } from '../../actions/pollActions';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nvar PollVote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PollVote, _Component);\n\n  function PollVote() {\n    _classCallCheck(this, PollVote);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PollVote).apply(this, arguments));\n  }\n\n  _createClass(PollVote, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPoll(this.props.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.poll && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"  \", React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" Should I meme? \"), React.createElement(Table, {\n        celled: true,\n        selectable: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.poll.title))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.poll.options.map(function (option) {\n        return React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, option.text));\n      }))), React.createElement(Segment.Group, {\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Top\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Middle\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Bottom\")), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Bottom\")));\n    }\n  }]);\n\n  return PollVote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    poll: state.polls.poll\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPoll: getPoll\n})(PollVote);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\PollVote\\PollVote.js"],"names":["React","Component","Button","Checkbox","Form","Container","Segment","Header","Label","Table","connect","getPoll","HorizontalBar","PollVote","props","id","poll","title","options","map","option","text","mapStateToProps","state","polls"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,EAA6DC,KAA7D,EAAoEC,KAApE,QAAiF,mBAAjF;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AAGA,SAAQC,aAAR,QAA4B,iBAA5B;;IAIMC,Q;;;;;;;;;;;;;yCAEgB;AAClB,WAAKC,KAAL,CAAWH,OAAX,CAAmB,KAAKG,KAAL,CAAWC,EAA9B;AACD;;;6BAEU;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,IAAX,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR,EAC9B,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,UAAU,MAAxB;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,KAAKF,KAAL,CAAWE,IAAX,CAAgBC,KAAtD,CADF,CADF,CADC,EAOD,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEa,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,OAAhB,CAAwBC,GAAxB,CAA4B,UAAAC,MAAM;AAAA,eACjC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaA,MAAM,CAACC,IAApB,CADA,CADiC;AAAA,OAAlC,CAFb,CAPC,CAD8B,EAmB/B,oBAAC,OAAD,CAAS,KAAT;AAAe,QAAA,UAAU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAnB+B,EAwB/B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxB+B,CADvB,CADJ;AAkCH;;;;EAzCkBpB,S;;AA4CvB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAEhCP,IAAAA,IAAI,EAAEO,KAAK,CAACC,KAAN,CAAYR;AAFc,GAAL;AAAA,CAA7B;;AAMA,eAAeN,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA,OAAO,EAAPA;AAAD,CAAlB,CAAP,CAAoCE,QAApC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {getPoll} from '../../actions/pollActions';\r\n\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\n \r\n\r\nclass PollVote extends Component {\r\n\r\n  componentWillMount(){\r\n    this.props.getPoll(this.props.id)\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div >             \r\n              {this.props.poll &&  <div >  <Header> Should I meme? </Header>\r\n     <Table celled selectable size='large'>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell textAlign='center'>{this.props.poll.title}</Table.HeaderCell>\r\n        \r\n      </Table.Row>\r\n    </Table.Header>\r\n    <Table.Body >\r\n\r\n                {this.props.poll.options.map(option=>\r\n                  <Table.Row >\r\n                  <Table.Cell>{option.text}</Table.Cell>\r\n                </Table.Row>\r\n                  )}\r\n     \r\n    </Table.Body>\r\n  </Table>\r\n   \r\n    <Segment.Group horizontal>\r\n      <Segment>Top</Segment>\r\n      <Segment>Middle</Segment>\r\n      <Segment>Bottom</Segment>\r\n    </Segment.Group>\r\n    <Segment>Bottom</Segment>\r\n    </div >  \r\n}\r\n\r\n\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  poll: state.polls.poll,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPoll})(PollVote);\r\n\r\n  "]},"metadata":{},"sourceType":"module"}