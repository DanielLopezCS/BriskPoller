{"version":3,"sources":["reducers/errorReducer.js","reducers/pollReducer.js","reducers/index.js","actions/types.js","store.js","actions/pollActions.js","components/Spinner.js","components/Polls/Polls.js","components/SideBar/SideBar.js","components/Pages/PollsPage.js","components/CreatePoll/CreatePoll.js","components/Pages/PollCreatePage.js","components/PollDetail/PollDetail.js","components/PollVote/PollVote.js","components/Pages/PollDetailPage.js","components/PollsArchive/PollsArchive.js","components/Pages/PollArchivePage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","combineReducers","error","state","arguments","length","undefined","action","type","payload","polls","Object","objectSpread","poll","available","memes","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","axios","defaults","baseURL","getPolls","dispatch","get","then","res","data","catch","err","getPoll","id","concat","getCheck","Spinner","react_default","a","createElement","Dimmer","active","inverted","Loader","style","marginTop","size","content","Polls","this","props","getShowcase","nextProps","setState","components_Spinner","Header","as","splice","map","Fragment","href","Link","to","_id","Segment","raised","color","title","Component","connect","HorizontalSidebar","_ref","animation","direction","visible","Sidebar","Grid","textAlign","Row","columns","Column","divided","Image","src","VerticalSidebar","_ref2","_React$createElement","_React$createElement2","_React$createElement3","Menu","icon","vertical","width","Item","defineProperty","Icon","name","SidebarExampleTransitions","dimmed","handleAnimationChange","_this","prevState","handleDimmedChange","e","_ref3","checked","handleDirectionChange","_this$state","Pushable","height","SideBar_HorizontalSidebar","SideBar_VerticalSidebar","Pusher","basic","children","PollsPage","SideBar_SidebarExampleTransitions","components_Polls_Polls","CreatePoll","options","public","handleToggle","handleText","i","toConsumableArray","target","value","handleTitle","event","handleDelete","preventDefault","slice","addOption","onSubmit","optionsJSON","isPublic","index","push","text","pollJSON","postPoll","alert","history","_this2","react","Container","Form","Field","placeholder","onChange","question","key","onClick","onFocus","Checkbox","label","Button","post","PollCreatePage","components_CreatePoll_CreatePoll","PollDetail","chartLabels","chartData","voterCount","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","responsive","maintainAspectRatio","voted","Message","react_chartjs_2_es","Label","views","date","substring","PollVote","vote","_callee","optionID","optionJSON","regenerator_default","wrap","_context","prev","next","option","putVote","stop","Table","celled","selectable","HeaderCell","Body","Cell","pollID","put","PollDetailPage","match","params","components_PollVote_PollVote","components_PollDetail_PollDetail","PollsArchive","column","itemsPerPage","currentPage","totalItems","activeItem","handleQuestionClick","handleItemClick","handleNextClick","Math","floor","handleBackClick","tableData","Footer","colSpan","floated","pagination","Array","x","PollArchivePage","components_PollsArchive_PollsArchive","App","es","BrowserRouter","className","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAEMA,EAAe,WCAfA,EAAe,CACjBC,SAAS,GCEEC,cAAgB,CAE7BC,MFHa,WAAuC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBL,EAAcQ,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IGLsB,aHMpB,OAAOD,EAAOE,QAChB,QACE,OAAON,IEDXO,MDDa,WAAuC,IAA9BP,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBL,EAAcQ,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEpD,OAAQC,EAAOC,MACb,IENqB,YFOnB,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEO,MAAMH,EAAOE,UAGf,IEVkB,WFgBlB,IEZkB,WFiBlB,IEfmB,YFgBjB,OAAAE,OAAAC,EAAA,EAAAD,CAAA,GACKR,EADL,CAEEU,KAAMN,EAAOE,UAEjB,IEnBmB,YFoBjB,OAAAE,OAAAC,EAAA,EAAAD,CAAA,GACKR,EADL,CAEEW,UAAWP,EAAOE,UAEtB,IE7BuB,gBF8BrB,OAAAE,OAAAC,EAAA,EAAAD,CAAA,GACKR,EADL,CAEEY,MAAM,UAEV,IErCsB,eFsCpB,OAAAJ,OAAAC,EAAA,EAAAD,CAAA,GACKR,EADL,CAEEO,MAAMH,EAAOE,UAKnB,QACE,OAAON,MG7CPa,EAAa,CAACC,KAULC,EARDC,YACZC,EALmB,GAOnBC,YACEC,IAAeC,WAAf,EAAmBP,qGCNvBQ,IAAMC,SAASC,QAAU,yBAGlB,IAAMC,EAAW,kBAAI,SAAAC,GACxBJ,IACCK,IAAI,eACJC,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KFViB,YEWjBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFlBc,aEmBdC,QAAS,4BAuBR0B,EAAU,SAACC,GAAD,OAAM,SAAAR,GACzBJ,IACCK,IADD,aAAAQ,OACkBD,IACjBN,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KF1CgB,WE2ChBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFpDc,aEqDdC,QAAS,8BAuCR6B,EAAW,SAACF,GAAD,OAAM,SAAAR,GAC1BJ,IACCK,IADD,mBAAAQ,OACwBD,IACvBN,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KFrFiB,YEsFjBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFtGc,aEuGdC,QAAS,gDC/FN8B,EANC,kBACdC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,MAAS,CAAEC,UAAU,QAASH,UAAQ,EAACI,KAAK,OAAOC,QAAS,iBCGlEC,6MACFhD,MAAQ,CACJH,SAAQ,uFAGRoD,KAAKC,MAAMC,gEAEWC,GAEnBA,EAAU7C,OACT0C,KAAKI,SAAS,CAACxD,SAAQ,qCAM3B,OACGwC,EAAAC,EAAAC,cAAA,WACKU,KAAKjD,MAAMH,QAASwC,EAAAC,EAAAC,cAACe,EAAD,MAAYjB,EAAAC,EAAAC,cAAA,WACjCF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,GAAG,MAAX,mBACEP,KAAKC,MAAM3C,MAAMA,OAAS0C,KAAKC,MAAM3C,MAAMA,MAAMkD,OAAO,EAAE,IAAIC,IAAI,SAAAhD,GAAI,OACvE2B,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACOtB,EAAAC,EAAAC,cAAA,KAAGqB,KAAK,KACXvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAM,SAASpD,EAAKqD,KAC1B1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,QAAM,EAAEC,MAAM,SAASxB,UAAQ,EAAEI,KAAK,OAAQF,MAAO,CAACC,UAAU,QAASZ,GAAMvB,EAAKqD,KAExFrD,EAAKyD,qBA1BVC,aAmDHC,cANO,SAAArE,GAAK,MAAK,CAE9BO,MAAOP,EAAMO,QAIyB,CAACiB,WAAU2B,YFjC1B,kBAAI,SAAA1B,GAC3BJ,IACCK,IAAI,uBACJC,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KF1BoB,eE2BpBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFnCc,aEoCdC,QAAS,6BEsBJ+D,CAAkDrB,GCxC7DsB,EAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAWC,EAAdF,EAAcE,UAAWC,EAAzBH,EAAyBG,QAAzB,OACxBrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAASnB,GAAIQ,IAASQ,UAAWA,EAAWC,UAAWA,EAAWC,QAASA,GACzErC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,UAAU,UACdxC,EAAAC,EAAAC,cAACqC,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB1C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,OAAN,KACE3C,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,GAAG,MAAX,wBAGJnB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMG,QAAS,EAAGE,SAAO,GACvB5C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,OAAN,KACE3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,IAAI,wEAEb9C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,OAAN,KACE3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,IAAI,wEAEb9C,EAAAC,EAAAC,cAACqC,EAAA,EAAKI,OAAN,KACE3C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,IAAI,4EAafC,EAAkB,SAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAGhB,EAAHa,EAAGb,UAAWC,EAAdY,EAAcZ,UAAWC,EAAzBW,EAAyBX,QAAzB,OACtBrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEnB,GAAIiC,IACJjB,UAAWA,EACXC,UAAWA,EACXiB,KAAK,UACLhD,UAAQ,EACRiD,UAAQ,EACRjB,QAASA,EACTkB,MAAM,QAEHvD,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,MAANP,EAAA,CAAW9B,GAAG,KAAdhD,OAAAsF,EAAA,EAAAtF,CAAA8E,EAAA,KAAuBzB,KAAvBrD,OAAAsF,EAAA,EAAAtF,CAAA8E,EAAA,KAAiC,KAAjCA,GACDjD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,SAAS9B,MAAM,SAAUpB,KAAK,SACzCT,EAAAC,EAAAC,cAAA,QAAMK,MAAO,CAACsB,MAAM,WAApB,cAEF7B,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,KAAN,CAAWrC,GAAIK,IAAMC,GAAI,WACvBzB,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,eADb,eAMA3D,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,MAANN,EAAA,CAAW/B,GAAG,KAAdhD,OAAAsF,EAAA,EAAAtF,CAAA+E,EAAA,KAAsB1B,KAAtBrD,OAAAsF,EAAA,EAAAtF,CAAA+E,EAAA,KAAgC,UAAhCA,GACElD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,iBADb,cAIA3D,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,MAANL,EAAA,CAAWhC,GAAG,KAAdhD,OAAAsF,EAAA,EAAAtF,CAAAgF,EAAA,KAAsB3B,KAAtBrD,OAAAsF,EAAA,EAAAtF,CAAAgF,EAAA,KAAgC,KAAhCA,GACEnD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,SADb,iBAaiBC,6MACnBjG,MAAQ,CACNwE,UAAW,OACXC,UAAW,OACXyB,QAAQ,EACRxB,SAAS,KAGXyB,sBAAwB,SAAA3B,GAAS,OAAI,kBACnC4B,EAAK/C,SAAS,SAAAgD,GAAS,MAAK,CAAE7B,YAAWE,SAAU2B,EAAU3B,eAE/D4B,mBAAqB,SAACC,EAADC,GAAA,IAAMC,EAAND,EAAMC,QAAN,OAAoBL,EAAK/C,SAAS,CAAE6C,OAAQO,OAEjEC,sBAAwB,SAAAjC,GAAS,OAAI,kBAAM2B,EAAK/C,SAAS,CAAEoB,YAAWC,SAAS,8EAEtE,IAAAiC,EAC2C1D,KAAKjD,MAA/CwE,EADDmC,EACCnC,UAAW0B,EADZS,EACYT,OAAQzB,EADpBkC,EACoBlC,UAAWC,EAD/BiC,EAC+BjC,QAChCiB,EAAyB,WAAdlB,GAAwC,QAAdA,EAE3C,OACEpC,EAAAC,EAAAC,cAAA,WAIEF,EAAAC,EAAAC,cAACoC,EAAA,EAAQiC,SAAT,CAAkBpD,GAAIQ,IAASpB,MAAS,CAACiE,OAAO,UAC7ClB,EACCtD,EAAAC,EAAAC,cAACuE,EAAD,CAAmBtC,UAAWA,EAAWC,UAAWA,EAAWC,QAASA,IACtE,KACHiB,EAAW,KACVtD,EAAAC,EAAAC,cAACwE,EAAD,CAAiBvC,UAAWA,EAAWC,UAAWA,EAAWC,QAASA,IAGxErC,EAAAC,EAAAC,cAACoC,EAAA,EAAQqC,OAAT,CAAgBd,OAAQA,GAAUxB,GAChCrC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASiD,OAAK,GAGbhE,KAAKC,MAAMgE,oBApC+B9C,aCjFlC+C,mLAGb,OACI9E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6E,EAAD,KACI/E,EAAAC,EAAAC,cAAC8E,EAAD,eANmBjD,yDCGjCkD,qNACFtH,MAAQ,CACNmE,MAAM,GACNoD,QAAS,CAAC,IACVzE,KAAM,EACN0E,QAAQ,KAUVC,aAAe,WACVrB,EAAKpG,MAAMwH,OAAOpB,EAAK/C,SAAS,CAACmE,QAAO,IACtCpB,EAAK/C,SAAS,CAACmE,QAAO,OAE7BE,WAAa,SAAAC,GAAC,OAAI,SAAApB,GAChB,IAAIgB,EAAO/G,OAAAoH,EAAA,EAAApH,CAAO4F,EAAKpG,MAAMuH,SAC7BA,EAAQI,GAAKpB,EAAEsB,OAAOC,MACtB1B,EAAK/C,SAAS,CACZkE,gBAIJQ,YAAc,SAACC,GACb5B,EAAK/C,SAAS,CAACc,MAAO6D,EAAMH,OAAOC,WAGrCG,aAAe,SAAAN,GAAC,OAAI,SAAApB,GAClBA,EAAE2B,iBACF,IAAIX,EAAO,GAAArF,OAAA1B,OAAAoH,EAAA,EAAApH,CACN4F,EAAKpG,MAAMuH,QAAQY,MAAM,EAAGR,IADtBnH,OAAAoH,EAAA,EAAApH,CAEN4F,EAAKpG,MAAMuH,QAAQY,MAAMR,EAAI,KAElCvB,EAAK/C,SAAS,CACZkE,gBAIJa,UAAY,SAAA7B,GAEV,GADAA,EAAE2B,iBACC3B,EAAEsB,OAAO5F,IAAMmE,EAAKpG,MAAM8C,KAAK,CAClC,IAAIyE,EAAUnB,EAAKpG,MAAMuH,QAAQrF,OAAO,CAAC,KACzCkE,EAAK/C,SAAS,CACZkE,UACAzE,KAAMsD,EAAKpG,MAAM8C,KAAM,QAK3BuF,SAAW,SAAC9B,GAER,GADAA,EAAE2B,iBACsB,KAArB9B,EAAKpG,MAAMmE,MAAd,CAKA,IAAMmE,EAAa,GACbnE,EAAQiC,EAAKpG,MAAMmE,MACnBoE,EAAWnC,EAAKpG,MAAMwH,OAE5B,IAAI,IAAMgB,KAASpC,EAAKpG,MAAMuH,QACG,KAA5BnB,EAAKpG,MAAMuH,QAAQiB,IACtBF,EAAYG,KAAK,CAACC,KAAOtC,EAAKpG,MAAMuH,QAAQiB,KAG9C,GAA2B,IAAvBF,EAAYpI,OAAhB,CAIA,IAAMyI,EAAW,CAACxE,MAAMA,EAAOoD,QAASe,EAAad,OAAQe,GAE7DnC,EAAKlD,MAAM0F,SAASD,QALlBE,MAAM,4CAdNA,MAAM,mHAhDczF,GAErBA,EAAU1C,MACXuC,KAAKC,MAAM4F,QAAQL,KAAnB,SAAAvG,OAAiCkB,EAAU1C,KAAKqD,uCAmE3C,IAAAgF,EAAA9F,KACP,OACEZ,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KAEE3G,EAAAC,EAAAC,cAAA,WAEMF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQT,KAAK,OAAOoB,MAAM,UAA1B,iBACZ7B,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACI5G,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACI3B,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,KACI7G,EAAAC,EAAAC,cAAC2G,EAAA,EAAKC,MAAN,KAEA9G,EAAAC,EAAAC,cAAA,SAAO6G,YAAY,gBAAgBpD,KAAO,QAAQqD,SAAUpG,KAAK8E,YAAaD,MAAO7E,KAAKjD,MAAMmE,MAAO9D,KAAK,UAG5GgC,EAAAC,EAAAC,cAAC2G,EAAA,EAAKC,MAAN,KAEClG,KAAKjD,MAAMuH,QAAQ7D,IAAI,SAAC4F,EAAUd,GAAX,OAC5BnG,EAAAC,EAAAC,cAAA,OAAKgH,IAAKf,GAERnG,EAAAC,EAAAC,cAAA,SACElC,KAAK,OACL+I,YAAa,iBAAmBZ,EAAM,GACtCa,SAAUN,EAAKrB,WAAWc,GAC1BV,MAAOwB,EACPE,QAAUT,EAAKX,UACfqB,QAAUV,EAAKX,UACfnG,GAAIuG,EACJ5F,MAAO,CAACC,UAAU,UAGpBR,EAAAC,EAAAC,cAAA,eASEF,EAAAC,EAAAC,cAAC2G,EAAA,EAAKC,MAAN,KACA9G,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,SAAS3D,KAAK,SAASqD,SAAU,kBAAIN,EAAKtB,mBAE3DpF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAQvJ,KAAK,SAAS6D,MAAM,SAASpB,KAAK,OAAO0G,QAASvG,KAAKoF,UAA/D,sBAzHSjE,cA0IVC,cANS,SAAArE,GAAK,MAAK,CAEhCU,KAAMV,EAAMO,MAAMG,OAIoB,CAACkI,SLtEjB,SAAClI,GAAD,OAAS,SAAAe,GAC7BJ,IACCwI,KAAK,aAAcnJ,GACnBiB,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KFrEiB,YEsEjBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFrFc,aEsFdC,QAAS,wBK2DN+D,CAAqCiD,GC7I/BwC,mLAGb,OACIzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6E,EAAD,KACI/E,EAAAC,EAAAC,cAACwH,EAAD,CAAYjB,QAAW7F,KAAKC,MAAM4F,mBANV1E,0CCMtC4F,8MACJhK,MAAQ,CACNH,SAAQ,EACRgC,KAAK,wFAIHoB,KAAKC,MAAMlB,QAAQiB,KAAKC,MAAMjB,sDAENmB,GAExB,IAAM6G,EAAc,GACdC,EAAY,GAClB,IAAI,IAAM1B,KAASpF,EAAU1C,KAAK6G,QAEhC0C,EAAYxB,KAAKrF,EAAU1C,KAAK6G,QAAQiB,GAAOE,MAC/CwB,EAAUzB,KAAKrF,EAAU1C,KAAK6G,QAAQiB,GAAO2B,YAG/C,IAAMtI,EAAK,CACTuI,OAAQH,EACRI,SAAU,CACR,CACEV,MAAO,QACPW,gBAAiB,SACjBC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,SACtBC,iBAAkB,SAClB7I,KAAMqI,IAIV3C,QAAQ,CACNoD,YAAY,EACZC,qBAAqB,IAMzB3H,KAAKI,SAAS,CAACxB,KAAKA,EAAMhC,SAAS,qCAKjC,OACIwC,EAAAC,EAAAC,cAAA,WACGU,KAAKjD,MAAMH,QAASwC,EAAAC,EAAAC,cAACe,EAAD,MACvBjB,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACGhG,KAAKC,MAAM2H,OAASxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAS5G,MAAM,QAAf,gCAC/B7B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQsB,UAAU,UAAU5B,KAAKC,MAAMxC,MAAQuC,KAAKC,MAAMxC,KAAKyD,OAC/D9B,EAAAC,EAAAC,cAACwI,GAAA,EAAD,CAAelJ,KAAMoB,KAAKjD,MAAM6B,KAAOgF,OAAQ,KAGjDxE,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAO9G,MAAM,SAAQ7B,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAM7B,MAAM,SAAS8B,KAAK,QAAQ/C,KAAKC,MAAMxC,MAAQuC,KAAKC,MAAMxC,KAAKuK,OAC1F5I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,KAAO3I,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAM7B,MAAM,SAAS8B,KAAK,aAAa/C,KAAKC,MAAMxC,MAAQuC,KAAKC,MAAMxC,KAAKwK,KAAKC,UAAU,EAAE,KAClG9I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,KAAO3I,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAM7B,MAAM,SAAS8B,KAAK,YAAjC,8BAAwE/C,KAAKC,MAAMxC,MAAQuC,KAAKC,MAAMxC,KAAKqD,cAzDpFK,aAsEVC,eALS,SAAArE,GAAK,MAAK,CAChCU,KAAMV,EAAMO,MAAMG,OAIoB,CAACsB,WAA1BqC,CAAoC2F,6CCrE7CoB,8MAMJC,6CAAO,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAC,GAAAnJ,EAAAoJ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACCL,EAAY,CAChBM,OAAOP,GAGTnF,EAAKlD,MAAM6I,QAAQ3F,EAAKlD,MAAMjB,GAAIuJ,GAL7B,wBAAAG,EAAAK,SAAAV,gJAHLrI,KAAKC,MAAMlB,QAAQiB,KAAKC,MAAMjB,sDAUNmB,GACrBA,EAAU1C,MACXuC,KAAKC,MAAMf,SAASc,KAAKC,MAAMjB,qCAIxB,IAAA8G,EAAA9F,KACL,OACIZ,EAAAC,EAAAC,cAAA,WACGU,KAAKC,MAAMxC,MAAS2B,EAAAC,EAAAC,cAAA,gBAAQF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,yBACtClB,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACrJ,KAAK,SAC/BT,EAAAC,EAAAC,cAAC0J,GAAA,EAAM1I,OAAP,KACElB,EAAAC,EAAAC,cAAC0J,GAAA,EAAMnH,IAAP,KACEzC,EAAAC,EAAAC,cAAC0J,GAAA,EAAMG,WAAP,CAAkBvH,UAAU,UAAU5B,KAAKC,MAAMxC,KAAKyD,SAI1D9B,EAAAC,EAAAC,cAAC0J,GAAA,EAAMI,KAAP,KAEapJ,KAAKC,MAAMxC,KAAK6G,SAAUtE,KAAKC,MAAMxC,KAAK6G,QAAQ7D,IAAI,SAAAoI,GAAM,OAC3DzJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAMnH,IAAP,KACAzC,EAAAC,EAAAC,cAAC0J,GAAA,EAAMK,KAAP,CAAYrK,GAAM6J,EAAO/H,IAAKyF,QAAS,WAAKT,EAAKsC,KAAKS,EAAO/H,OAAQ+H,EAAOpD,oBAlCvEtE,aAyDRC,eANS,SAAArE,GAAK,MAAK,CAEhCU,KAAMV,EAAMO,MAAMG,OAIoB,CAACsB,UAAS+J,QRV3B,SAACQ,EAAQhB,GAAT,OAAqB,SAAA9J,GACxCJ,IACCmL,IADD,kBAAAtK,OACuBqK,GAAUhB,GAChC5J,KAAK,SAAAC,GAAG,OACLH,EAAS,CACTpB,KFtDgB,WEuDhBC,QAASsB,EAAIC,SAEhBC,MAAM,SAAAC,GAAG,OACNN,EAAS,CACLpB,KFpEc,aEqEdC,QAAS,kCQDsC6B,YAA5CkC,CAAuD+G,IC1DhEqB,8MAEFzM,MAAQ,CACJH,SAAQ,uFAMRoD,KAAKC,MAAMf,SAASc,KAAKC,MAAMwJ,MAAMC,OAAO1K,sDAEtBmB,GAEnBA,EAAUzC,WACTsC,KAAKI,SAAS,CAACxD,SAAQ,qCAI3B,OACIwC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6E,EAAD,KACInE,KAAKjD,MAAMH,QAAUwC,EAAAC,EAAAC,cAACe,EAAD,MAAcL,KAAKC,MAAMvC,YAAcsC,KAAKC,MAAMvC,UAAUkK,MACjFxI,EAAAC,EAAAC,cAACqK,GAAD,CAAU3K,GAAMgB,KAAKC,MAAMwJ,MAAMC,OAAO1K,GAAI6G,QAAU7F,KAAKC,MAAM4F,UAEjEzG,EAAAC,EAAAC,cAACsK,GAAD,CAAY5K,GAAMgB,KAAKC,MAAMwJ,MAAMC,OAAO1K,GAAI4I,MAAO5H,KAAKC,MAAMvC,qBAxBvDyD,aA2CZC,eANO,SAAArE,GAAK,MAAK,CAE9BW,UAAWX,EAAMO,MAAMI,YAIe,CAACwB,YAA1BkC,CAAqCoI,IC9ChDK,8MACF9M,MAAQ,CACJ+M,OAAQ,KACRlL,KAAM,GACN4C,UAAW,KACXuI,aAAc,GACdC,YAAa,EACbC,WAAY,EACZC,WAAY,EACZtN,SAAQ,KA4BZuN,oBAAsB,SAACnL,GACrBmE,EAAKlD,MAAM4F,QAAQL,KAAnB,SAAAvG,OAAiCD,OAEnCoL,gBAAkB,SAAC9G,EAADhC,GAAiB,IAAXyB,EAAWzB,EAAXyB,KACpBI,EAAK/C,SAAS,CAAE8J,WAAYnH,OAGhCsH,gBAAkB,WAEZlH,EAAKpG,MAAMmN,aAAcI,KAAKC,MAAMpH,EAAKpG,MAAMkN,WAAW9G,EAAKpG,MAAMgN,cAAc,GAAO5G,EAAKpG,MAAMgN,aAAe5G,EAAKpG,MAAMkN,YACjI9G,EAAK/C,SAAS,CAAE8J,WAAY/G,EAAKpG,MAAMmN,WAAW,OAExDM,gBAAkB,WACY,IAAxBrH,EAAKpG,MAAMmN,YAAkB/G,EAAKpG,MAAMgN,aAAe5G,EAAKpG,MAAMkN,YACpE9G,EAAK/C,SAAS,CAAE8J,WAAY/G,EAAKpG,MAAMmN,WAAW,yFArChDlK,KAAKC,MAAM1B,6DAGa4B,GAExB,IAAMsK,EAAY,GAElB,GAAGtK,EAAU7C,MACX,CAEE,IAAI,IAAMiI,KAASpF,EAAU7C,MAAM,CACjC,IAAM4D,EAAQf,EAAU7C,MAAMiI,GAAOrE,MAC/B8G,EAAQ7H,EAAU7C,MAAMiI,GAAOyC,MAC/BC,EAAO9H,EAAU7C,MAAMiI,GAAO0C,KAAKC,UAAU,EAAE,IAC/ClJ,EAAKmB,EAAU7C,MAAMiI,GAAOzE,IAClC2J,EAAUjF,KAAK,CAACtE,MAAMA,EAAM8G,MAAMA,EAAMC,KAAKA,EAAMjJ,GAAGA,IAExDgB,KAAKI,SAAS,CAACxB,KAAK6L,EAAUR,WAAY9J,EAAU7C,MAAML,OAAOL,SAAQ,sCAsBxE,IAAAkJ,EAAA9F,KAAA0D,EACqB1D,KAAKjD,MAAzB6B,EADD8E,EACC9E,KAAMsL,EADPxG,EACOwG,WAEZ,OAAQlK,KAAKjD,MAAMH,QAAUwC,EAAAC,EAAAC,cAACe,EAAD,MACzBjB,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQW,MAAM,UAAd,oBAAyCjB,KAAKjD,MAAMmN,WAAWlK,KAAKjD,MAAMgN,aAAa,EAAvF,QAAgG/J,KAAKjD,MAAMmN,WAAWlK,KAAKjD,MAAMgN,aAAgB/J,KAAKjD,MAAMgN,cACzK3K,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACrB9J,EAAAC,EAAAC,cAAC0J,GAAA,EAAM1I,OAAP,KACElB,EAAAC,EAAAC,cAAC0J,GAAA,EAAMnH,IAAP,KACEzC,EAAAC,EAAAC,cAAC0J,GAAA,EAAMG,WAAP,iBACA/J,EAAAC,EAAAC,cAAC0J,GAAA,EAAMG,WAAP,gBACA/J,EAAAC,EAAAC,cAAC0J,GAAA,EAAMG,WAAP,eAIJ/J,EAAAC,EAAAC,cAAC0J,GAAA,EAAMI,KAAP,KAEIxK,EAAKsG,MAAMoF,KAAKC,MAAMvK,KAAKjD,MAAMmN,WAAWlK,KAAKjD,MAAMgN,cAAcO,KAAKC,MAAOvK,KAAKjD,MAAMmN,WAAWlK,KAAKjD,MAAMgN,aAAgB/J,KAAKjD,MAAMgN,eAAetJ,IAAI,SAAA4F,GAAQ,OACtKjH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KAEAtB,EAAAC,EAAAC,cAAC0J,GAAA,EAAMnH,IAAP,CAAW0E,QAAS,kBAAIT,EAAKqE,oBAAoB9D,EAASrH,MAC1DI,EAAAC,EAAAC,cAAC0J,GAAA,EAAMK,KAAP,KACGhD,EAASnF,OAEb9B,EAAAC,EAAAC,cAAC0J,GAAA,EAAMK,KAAP,KAAahD,EAAS2B,OACtB5I,EAAAC,EAAAC,cAAC0J,GAAA,EAAMK,KAAP,KAAahD,EAAS4B,KAAKC,UAAU,EAAE,UAY5C9I,EAAAC,EAAAC,cAAC0J,GAAA,EAAM0B,OAAP,KACEtL,EAAAC,EAAAC,cAAC0J,GAAA,EAAMnH,IAAP,KACEzC,EAAAC,EAAAC,cAAC0J,GAAA,EAAMG,WAAP,CAAkBwB,QAAQ,KACxBvL,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMoI,QAAQ,QAAQC,YAAU,GAC9BzL,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,KAAN,CAAWrC,GAAG,IAAIkC,MAAI,EAAC8D,QAAUvG,KAAKwK,iBACpCpL,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,kBAEZxF,OAAAoH,EAAA,EAAApH,CAAIuN,MAAMR,KAAKC,MAAMvK,KAAKjD,MAAMkN,WAAWjK,KAAKjD,MAAMgN,gBAAgBtJ,IAAI,SAACsK,EAAGxF,GAAJ,OAC3EnG,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,KAAN,CAAYG,KAAMwC,EAAO/F,OAAQ0K,IAAe3E,EAAOgB,QAAST,EAAKsE,iBAAkB7E,EAAM,KAI7FnG,EAAAC,EAAAC,cAACkD,EAAA,EAAKI,KAAN,CAAWrC,GAAG,IAAIkC,MAAI,EAAC8D,QAAUvG,KAAKqK,iBACpCjL,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,gCAvGE5B,aA0HZC,eANS,SAAArE,GAAK,MAAK,CAEhCO,MAAOP,EAAMO,MAAMA,QAImB,CAACiB,YAA1B6C,CAAqCyI,IC7H/BmB,oLAEb,OACI5L,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6E,EAAD,KACI/E,EAAAC,EAAAC,cAAC2L,GAAD,CAAapF,QAAU7F,KAAKC,MAAM4F,mBALT1E,aCwC9B+J,4LAxBX,OAEE9L,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAUrN,MAAOA,GACfsB,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,KACIhM,EAAAC,EAAAC,cAAA,OAAK+L,UAAU,OAGfjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvH,IACjC9E,EAAAC,EAAAC,cAAA,OAAK+L,UAAU,aACbjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW5E,IACvCzH,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWjC,KACnCpK,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWT,gBAhB7B7J,cCJEuK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpC,MACvB,2DCZNqC,IAASC,OAAO3M,EAAAC,EAAAC,cAAC0M,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3N,KAAK,SAAA4N,GACjCA,EAAaC","file":"static/js/main.4cfca359.chunk.js","sourcesContent":["import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_POLLS, GET_POLL, GET_POLL_TEST, PUT_VOTE, POST_POLL, GET_CHECK, GET_SHOWCASE  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    \r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case GET_POLLS:\r\n      return {\r\n        ...state,\r\n        polls:action.payload\r\n    \r\n      }\r\n      case GET_POLL:\r\n      return {\r\n        ...state,\r\n        poll:action.payload\r\n    \r\n      }\r\n      case PUT_VOTE:\r\n      return{\r\n        ...state,\r\n        poll: action.payload\r\n      }\r\n      case  POST_POLL:\r\n        return{\r\n          ...state,\r\n          poll: action.payload\r\n        }\r\n      case GET_CHECK:\r\n        return{\r\n          ...state,\r\n          available: action.payload\r\n        }\r\n      case GET_POLL_TEST:\r\n        return{\r\n          ...state,\r\n          memes:'memes'\r\n        }\r\n      case GET_SHOWCASE:\r\n        return{\r\n          ...state,\r\n          polls:action.payload\r\n\r\n        }\r\n\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport errorReducer from './errorReducer';\r\nimport pollReducer from './pollReducer';\r\n\r\nexport default combineReducers({\r\n\r\n  error: errorReducer,\r\n  polls: pollReducer\r\n});","//auth\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\n\r\n// poll actions\r\nexport const GET_POLLS = 'GET_POLLS';\r\nexport const GET_SHOWCASE = 'GET_SHOWCASE';\r\nexport const GET_POLL = 'GET_POLL';\r\n\r\nexport const GET_POLL_TEST = 'GET_POLL_TEST';\r\n\r\nexport const PUT_VOTE = 'PUT_VOTE';\r\n\r\nexport const POST_POLL = 'POST_POLL';\r\nexport const GET_CHECK = 'GET_CHECK';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;","import axios from 'axios';\r\nimport {GET_POLLS, GET_POLL, GET_POLL_TEST, GET_ERRORS, PUT_VOTE, POST_POLL, GET_CHECK, GET_SHOWCASE} from './types';\r\n\r\n\r\n\r\n//defining base URL\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\n\r\nexport const getPolls = ()=>dispatch=>{\r\n    axios\r\n    .get('/api/polls/')\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_POLLS,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'No polls available.',\r\n        })    \r\n    )\r\n\r\n}\r\n\r\nexport const getShowcase = ()=>dispatch=>{\r\n    axios\r\n    .get('/api/polls/showcase')\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_SHOWCASE,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'No polls available.',\r\n        })    \r\n    )\r\n\r\n}\r\n\r\nexport const getPoll = (id)=>dispatch=>{\r\n    axios\r\n    .get(`api/polls/${id}`)\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_POLL,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'No poll with that id.',\r\n        })    \r\n    )\r\n\r\n}\r\nexport const putVote = (pollID, optionID) =>dispatch=>{\r\n    axios\r\n    .put(`api/polls/vote/${pollID}`, optionID)\r\n    .then(res => \r\n        dispatch({\r\n        type:PUT_VOTE,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'No option with that name.',\r\n        })    \r\n    )\r\n\r\n}\r\n\r\nexport const postPoll = (poll) =>dispatch=>{\r\n    axios\r\n    .post(\"api/polls/\", poll)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_POLL,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'Title required',\r\n        })    \r\n    )\r\n\r\n}\r\n\r\nexport const getCheck = (id)=>dispatch=>{\r\n    axios\r\n    .get(`api/polls/check/${id}`)\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_CHECK,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err=>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: 'No poll with that id.',\r\n        })    \r\n    )\r\n\r\n}\r\nexport const getPollTest = (id,history)=>dispatch=>{\r\n    history.push(\"/\");\r\n\r\n}","import React from \"react\";\r\nimport { Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nconst Spinner = () => (\r\n  <Dimmer active inverted>\r\n    <Loader style = {{ marginTop:'25vh'}} inverted size=\"huge\" content={\"Loading...\"} />\r\n  </Dimmer>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react'\r\nimport { Grid, Segment, Header, Container, Pagination } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\nimport {getPolls, getShowcase} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Spinner from '../Spinner';\r\n\r\nclass Polls extends Component {\r\n    state = {\r\n        loading:true\r\n    }\r\n    componentWillMount(){\r\n        this.props.getShowcase();\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n       \r\n        if(nextProps.polls){\r\n            this.setState({loading:false});\r\n        }\r\n    }\r\n    render() {\r\n  \r\n\r\n        return (\r\n           <div> \r\n               {this.state.loading? <Spinner/> :<div>\r\n               <Header as='h3'>Showcased Polls</Header>\r\n                {this.props.polls.polls && this.props.polls.polls.splice(0,15).map(poll=>\r\n                <React.Fragment >\r\n                       <a href='#' >\r\n                    <Link to = {'/poll/'+poll._id}>\r\n                    <Segment raised  color='orange' inverted  size='huge'  style={{marginTop:'15px'}} id = {poll._id}>\r\n               \r\n                        {poll.title}\r\n                    </Segment>\r\n                    </Link>\r\n                     </a>\r\n                    </React.Fragment>\r\n                 \r\n                \r\n\r\n\r\n                 )}\r\n                 </div>\r\n                }\r\n            \r\n          \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    polls: state.polls,\r\n\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {getPolls, getShowcase})(Polls);\r\n\r\n  ","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  \r\n} from 'semantic-ui-react'\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Polls from '../Polls/Polls'\r\n\r\nconst HorizontalSidebar = ({ animation, direction, visible }) => (\r\n  <Sidebar as={Segment} animation={animation} direction={direction} visible={visible}>\r\n    <Grid textAlign='center'>\r\n      <Grid.Row columns={1}>\r\n        <Grid.Column>\r\n          <Header as='h3'>New Content Awaits</Header>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid columns={3} divided>\r\n        <Grid.Column>\r\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Grid>\r\n  </Sidebar>\r\n)\r\n\r\nHorizontalSidebar.propTypes = {\r\n  animation: PropTypes.string,\r\n  direction: PropTypes.string,\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nconst VerticalSidebar = ({ animation, direction, visible }) => (\r\n  <Sidebar\r\n    as={Menu}\r\n    animation={animation}\r\n    direction={direction}\r\n    icon='labeled'\r\n    inverted\r\n    vertical\r\n    visible={visible}\r\n    width='thin'\r\n  >\r\n       <Menu.Item as='a'  as={Link} to ='/' >\r\n      <Icon name='images' color='orange'  size='huge' />\r\n      <span style={{color:'orange'}}>BriskPoll</span>\r\n    </Menu.Item>\r\n    <Menu.Item as={Link} to ='/create'>\r\n      <Icon name='pen square'  />\r\n      \r\n      Create Poll\r\n      \r\n    </Menu.Item>\r\n    <Menu.Item as='a' as={Link} to ='/polls'>\r\n      <Icon name='align center' />\r\n      View Polls\r\n    </Menu.Item>\r\n    <Menu.Item as='a' as={Link} to ='/'>\r\n      <Icon name='code' />\r\n      Source Code\r\n    </Menu.Item>\r\n  </Sidebar>\r\n)\r\n\r\nVerticalSidebar.propTypes = {\r\n  animation: PropTypes.string,\r\n  direction: PropTypes.string,\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nexport default class SidebarExampleTransitions extends Component {\r\n  state = {\r\n    animation: 'push',\r\n    direction: 'left',\r\n    dimmed: false,\r\n    visible: true,\r\n  }\r\n\r\n  handleAnimationChange = animation => () =>\r\n    this.setState(prevState => ({ animation, visible: !prevState.visible }))\r\n\r\n  handleDimmedChange = (e, { checked }) => this.setState({ dimmed: checked })\r\n\r\n  handleDirectionChange = direction => () => this.setState({ direction, visible: false })\r\n\r\n  render() {\r\n    const { animation, dimmed, direction, visible } = this.state\r\n    const vertical = direction === 'bottom' || direction === 'top'\r\n    \r\n    return (\r\n      <div>\r\n\r\n\r\n  \r\n        <Sidebar.Pushable as={Segment} style = {{height:'150vh'}} >\r\n          {vertical ? (\r\n            <HorizontalSidebar animation={animation} direction={direction} visible={visible} />\r\n          ) : null}\r\n          {vertical ? null : (\r\n            <VerticalSidebar animation={animation} direction={direction} visible={visible} />\r\n          )}\r\n\r\n          <Sidebar.Pusher dimmed={dimmed && visible}>\r\n            <Segment basic>\r\n              \r\n              \r\n            {this.props.children}\r\n\r\n\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport SideBar from '../SideBar/SideBar'\r\n\r\nimport Polls from '../Polls/Polls'\r\n\r\nexport default class PollsPage extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <SideBar>\r\n                    <Polls/>\r\n                </SideBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header, Label } from 'semantic-ui-react'\r\nimport {postPoll} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport './style.css'\r\n\r\nclass CreatePoll extends Component {\r\n    state = {\r\n      title:'',\r\n      options: [''],\r\n      size: 0,\r\n      public: false\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n      //go to poll when poll created\r\n      if(nextProps.poll){\r\n        this.props.history.push(`/poll/${nextProps.poll._id}`);\r\n      }\r\n   \r\n    }\r\n    handleToggle = () =>{\r\n      if(this.state.public)this.setState({public:false});\r\n      else this.setState({public:true});\r\n    }\r\n    handleText = i => e => {\r\n      let options = [...this.state.options]\r\n      options[i] = e.target.value\r\n      this.setState({\r\n        options\r\n      })\r\n    }\r\n\r\n    handleTitle = (event) =>{\r\n      this.setState({title: event.target.value});\r\n    }\r\n  \r\n    handleDelete = i => e => {\r\n      e.preventDefault()\r\n      let options = [\r\n        ...this.state.options.slice(0, i),\r\n        ...this.state.options.slice(i + 1)\r\n      ]\r\n      this.setState({\r\n        options\r\n      })\r\n    }\r\n  \r\n    addOption = e => {\r\n      e.preventDefault()\r\n      if(e.target.id == this.state.size){\r\n      let options = this.state.options.concat([''])\r\n      this.setState({\r\n        options,\r\n        size: this.state.size +1\r\n      })\r\n        }\r\n    }\r\n  \r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(this.state.title === '') {\r\n          alert(\"Please enter a title.\")\r\n          return;\r\n        }\r\n      \r\n        const optionsJSON= [];\r\n        const title = this.state.title;\r\n        const isPublic = this.state.public;\r\n\r\n        for(const index in this.state.options){\r\n          if(this.state.options[index]!==\"\")\r\n          optionsJSON.push({\"text\":this.state.options[index]});\r\n        }\r\n        //if all options are blank then give error\r\n        if (optionsJSON.length === 0){\r\n          alert(\"Please enter at least one question.\");\r\n          return;\r\n        }\r\n        const pollJSON = {title:title, options: optionsJSON, public: isPublic};\r\n\r\n        this.props.postPoll(pollJSON);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        \r\n          <div>\r\n\r\n                <Header size='huge' color='orange'>Creating Poll</Header>\r\n    <Container>\r\n        <Segment  >\r\n            <Form>\r\n                <Form.Field>\r\n             \r\n                <input placeholder='Your Question' name = 'title' onChange={this.handleTitle} value={this.state.title} type=\"text\"/>\r\n                \r\n                </Form.Field>\r\n                <Form.Field >\r\n                \r\n                {this.state.options.map((question, index) => (\r\n            <div key={index}>\r\n                \r\n              <input\r\n                type=\"text\"\r\n                placeholder={'Poll Option #' + (index+1)}\r\n                onChange={this.handleText(index)}\r\n                value={question}\r\n                onClick ={this.addOption}\r\n                onFocus ={this.addOption}\r\n                id={index}\r\n                style={{marginTop:'20px'}}\r\n              />\r\n           \r\n              <br/>\r\n            </div>\r\n            \r\n         \r\n          ))}\r\n\r\n                \r\n               \r\n                </Form.Field>\r\n                <Form.Field>\r\n                <Checkbox  label='Public' name='public' onChange={()=>this.handleToggle()} />\r\n                </Form.Field>\r\n                <Button type='submit' color='orange' size='huge' onClick={this.onSubmit}>Create</Button>\r\n            </Form>\r\n        </Segment>\r\n    </Container>\r\n            </div>\r\n\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n  \r\nconst mapStateToProps = state => ({\r\n\r\n  poll: state.polls.poll,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {postPoll})(CreatePoll);\r\n\r\n","import React, { Component } from 'react'\r\nimport SideBar from '../SideBar/SideBar'\r\n\r\nimport CreatePoll from '../CreatePoll/CreatePoll'\r\n\r\nexport default class PollCreatePage extends Component {   \r\n    render() {\r\n \r\n        return (\r\n            <div>\r\n                <SideBar>\r\n                    <CreatePoll history = {this.props.history}/>\r\n                </SideBar>\r\n              {/*  <SideBar  /> */}               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Segment, Header, Container, Message, Icon, Label } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {getPoll} from '../../actions/pollActions';\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2'\r\n\r\nimport Spinner from '../Spinner'\r\n\r\n\r\n \r\nclass PollDetail extends Component {\r\n  state = {\r\n    loading:true,\r\n    data:[]\r\n  }\r\n\r\n    componentWillMount(){\r\n      this.props.getPoll(this.props.id);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n      \r\n      const chartLabels = [];\r\n      const chartData = [];\r\n      for(const index in nextProps.poll.options){\r\n      \r\n        chartLabels.push(nextProps.poll.options[index].text);\r\n        chartData.push(nextProps.poll.options[index].voterCount);\r\n      }\r\n     \r\n      const data={\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Votes',\r\n            backgroundColor: 'orange',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'yellow',\r\n            hoverBorderColor: 'yellow',\r\n            data: chartData\r\n          }\r\n        ],\r\n        \r\n        options:{\r\n          responsive: true,\r\n          maintainAspectRatio: true,\r\n          \r\n        },\r\n    \r\n      \r\n      };\r\n      this.setState({data:data, loading: false})\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >    \r\n              {this.state.loading? <Spinner/> :\r\n            <Container>     \r\n              {this.props.voted && <Message color='teal'>Your Vote Has Been Recorded!</Message>}\r\n    <Header textAlign='center'>{this.props.poll && this.props.poll.title}</Header>\r\n    <HorizontalBar data={this.state.data}  height={80} />\r\n  \r\n \r\n  <Label color='white'><Icon color='orange' name='eye'/>{this.props.poll && this.props.poll.views}</Label>\r\n  <Label><Icon color='orange' name='calendar'/>{this.props.poll && this.props.poll.date.substring(0,10)}</Label>\r\n  <Label><Icon color='orange' name='linkify'/>http://localhost:3000/poll/{this.props.poll && this.props.poll._id}</Label>\r\n           </Container>\r\n          \r\n              }\r\n                </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  poll: state.polls.poll\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getPoll})(PollDetail);\r\n","import React, { Component } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header, Label, Table } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {getPoll, putVote, getCheck} from '../../actions/pollActions';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\n \r\n\r\nclass PollVote extends Component {\r\n\r\n  componentWillMount(){\r\n    this.props.getPoll(this.props.id)\r\n  }\r\n\r\n  vote = async (optionID) =>{\r\n    const optionJSON= {\r\n      option:optionID\r\n    }\r\n   \r\n    this.props.putVote(this.props.id, optionJSON);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.poll)\r\n      this.props.getCheck(this.props.id);\r\n\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div >             \r\n              {this.props.poll &&  <div >  <Header> Should I meme? </Header>\r\n     <Table celled selectable size='large'>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell textAlign='center'>{this.props.poll.title}</Table.HeaderCell>\r\n        \r\n      </Table.Row>\r\n    </Table.Header>\r\n    <Table.Body >\r\n\r\n                {this.props.poll.options&& this.props.poll.options.map(option=>\r\n                  <Table.Row >\r\n                  <Table.Cell id = {option._id} onClick={()=>{this.vote(option._id)}}>{option.text}</Table.Cell>\r\n                </Table.Row>\r\n                  )}\r\n     \r\n    </Table.Body>\r\n  </Table>\r\n   \r\n    </div >  \r\n}\r\n\r\n\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  poll: state.polls.poll,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPoll, putVote, getCheck})(PollVote);\r\n\r\n  ","import React, { Component } from 'react'\r\nimport SideBar from '../SideBar/SideBar'\r\n\r\nimport PollDetail from '../PollDetail/PollDetail'\r\nimport PollVote from '../PollVote/PollVote'\r\n\r\nimport {getCheck} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Spinner from '../Spinner';\r\n\r\nclass PollDetailPage extends Component {\r\n\r\n    state = {\r\n        loading:true\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n      \r\n        this.props.getCheck(this.props.match.params.id);\r\n    }    \r\n    componentWillReceiveProps(nextProps){\r\n       \r\n        if(nextProps.available){\r\n            this.setState({loading:false});\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SideBar>{\r\n                    this.state.loading ? <Spinner/>:  (this.props.available && !this.props.available.voted) ?\r\n                    <PollVote id = {this.props.match.params.id} history ={this.props.history}/>\r\n                    :\r\n                    <PollDetail id = {this.props.match.params.id} voted={this.props.available}  />\r\n\r\n                }\r\n                \r\n             \r\n                </SideBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    available: state.polls.available,\r\n\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {getCheck})(PollDetailPage);\r\n\r\n  ","import React, { Component } from 'react'\r\nimport { Icon, Menu, Table, Container, Header } from 'semantic-ui-react'\r\nimport {getPolls} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\nimport {Link, Router} from 'react-router-dom'\r\n\r\nimport Spinner from '../Spinner';\r\n\r\nclass PollsArchive extends Component {\r\n    state = {\r\n        column: null,\r\n        data: [],\r\n        direction: null,\r\n        itemsPerPage: 15,\r\n        currentPage: 0,\r\n        totalItems: 0,\r\n        activeItem: 0,\r\n        loading:true\r\n      }\r\n      \r\n      componentWillMount(){\r\n\r\n        this.props.getPolls();\r\n\r\n      }\r\n      componentWillReceiveProps(nextProps){\r\n        \r\n        const tableData = [];\r\n\r\n        if(nextProps.polls)\r\n          {\r\n            \r\n            for(const index in nextProps.polls){\r\n              const title = nextProps.polls[index].title;\r\n              const views = nextProps.polls[index].views;\r\n              const date = nextProps.polls[index].date.substring(0,10);\r\n              const id = nextProps.polls[index]._id;\r\n              tableData.push({title:title,views:views,date:date, id:id})\r\n            }\r\n            this.setState({data:tableData,totalItems: nextProps.polls.length,loading:false});\r\n\r\n          }\r\n          \r\n\r\n      }\r\n    handleQuestionClick = (id)=>{\r\n      this.props.history.push(`/poll/${id}`);\r\n    }\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name});\r\n        \r\n    }\r\n    handleNextClick = () => {\r\n\r\n      if((this.state.activeItem!== Math.floor(this.state.totalItems/this.state.itemsPerPage)-1) && (this.state.itemsPerPage < this.state.totalItems))\r\n        this.setState({ activeItem: this.state.activeItem+1});\r\n  }\r\n  handleBackClick = () => {\r\n    if((this.state.activeItem!==0)&&(this.state.itemsPerPage < this.state.totalItems) )\r\n      this.setState({ activeItem: this.state.activeItem-1});\r\n}\r\n    render() {\r\n       const {data, activeItem} = this.state; \r\n\r\n        return (this.state.loading ? <Spinner/> :\r\n            <Container>\r\n              <Header color='orange'>Displaying Polls {this.state.activeItem*this.state.itemsPerPage+1}  to {(this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage}</Header>\r\n <Table celled selectable>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>Question</Table.HeaderCell>\r\n        <Table.HeaderCell>Viewers</Table.HeaderCell>\r\n        <Table.HeaderCell>Date</Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n    \r\n    <Table.Body>\r\n    {\r\n        data.slice(Math.floor(this.state.activeItem*this.state.itemsPerPage),Math.floor((this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage)).map(question =>\r\n          <React.Fragment>\r\n          \r\n          <Table.Row onClick={()=>this.handleQuestionClick(question.id)}>\r\n          <Table.Cell>\r\n            {question.title}   \r\n         </Table.Cell>\r\n         <Table.Cell>{question.views}</Table.Cell>\r\n         <Table.Cell>{question.date.substring(0,10)}</Table.Cell>\r\n       </Table.Row>\r\n       \r\n         </React.Fragment>\r\n        )\r\n      \r\n      }\r\n     \r\n          \r\n \r\n    </Table.Body >\r\n\r\n    <Table.Footer>\r\n      <Table.Row>\r\n        <Table.HeaderCell colSpan='3'>\r\n          <Menu floated='right' pagination >\r\n            <Menu.Item as='a' icon onClick ={this.handleBackClick}> \r\n              <Icon name='chevron left' />\r\n            </Menu.Item>\r\n            {[...Array(Math.floor(this.state.totalItems/this.state.itemsPerPage))].map((x, index) =>\r\n            <Menu.Item  name={index} active={activeItem === index} onClick={this.handleItemClick}>{index+1}</Menu.Item>\r\n            )}\r\n\r\n    \r\n            <Menu.Item as='a' icon onClick ={this.handleNextClick}>\r\n              <Icon name='chevron right' />\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Footer>\r\n  </Table>\r\n            </Container>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  polls: state.polls.polls,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPolls})(PollsArchive);\r\n\r\n","import React, { Component } from 'react'\r\nimport SideBar from '../SideBar/SideBar';\r\n\r\nimport PollArchive from '../PollsArchive/PollsArchive'\r\n\r\nexport default class PollArchivePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SideBar>\r\n                    <PollArchive history ={this.props.history} />\r\n                </SideBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\n\nimport PollsPage from './components/Pages/PollsPage';\n\nimport PollCreatePage from './components/Pages/PollCreatePage';\nimport PollDetailPage from './components/Pages/PollDetailPage';\nimport PollArchivePage from './components/Pages/PollArchivePage';\n\nimport 'semantic-ui-css/semantic.min.css'\n\n\nclass App extends Component {\n\n  render() {\n    \n\n    return (\n\n      <Provider store={store}>\n        <Router>\n            <div className=\"App\"> \n            \n             \n            <Route exact path=\"/\" component={PollsPage}  />\n            <div className=\"container\">\n              <Route exact path=\"/create\" component={PollCreatePage} />\n              <Route path=\"/poll/:id\" component={PollDetailPage}  />\n              <Route path=\"/polls/\" component={PollArchivePage}  />\n\n            </div>\n          \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}