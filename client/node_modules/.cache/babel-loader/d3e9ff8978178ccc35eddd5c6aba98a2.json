{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\Test\\\\Dynamic.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react';\n\nvar ListOfQuestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListOfQuestions, _Component);\n\n  function ListOfQuestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListOfQuestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListOfQuestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      questions: [''],\n      size: 0\n    };\n\n    _this.handleText = function (i) {\n      return function (e) {\n        var questions = _toConsumableArray(_this.state.questions);\n\n        questions[i] = e.target.value;\n\n        _this.setState({\n          questions: questions\n        });\n      };\n    };\n\n    _this.handleDelete = function (i) {\n      return function (e) {\n        e.preventDefault();\n        var questions = [].concat(_toConsumableArray(_this.state.questions.slice(0, i)), _toConsumableArray(_this.state.questions.slice(i + 1)));\n\n        _this.setState({\n          questions: questions\n        });\n      };\n    };\n\n    _this.addQuestion = function (e) {\n      e.preventDefault();\n\n      if (e.target.id == _this.state.size) {\n        var questions = _this.state.questions.concat(['']);\n\n        _this.setState({\n          questions: questions,\n          size: _this.state.size + 1\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ListOfQuestions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"huge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Poller!\"), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        padded: true,\n        raised: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Your Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Segment.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.questions.map(function (question, index) {\n        return React.createElement(Segment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: 'Poll Option #' + (index + 1),\n          onChange: _this2.handleText(index),\n          value: question,\n          onClick: _this2.addQuestion,\n          id: index,\n          style: {\n            marginTop: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })));\n      }))), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        label: \"Public\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return ListOfQuestions;\n}(Component);\n\nexport { ListOfQuestions as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\Test\\Dynamic.js"],"names":["React","Component","Fragment","Button","Checkbox","Form","Container","Segment","Header","ListOfQuestions","state","questions","size","handleText","i","e","target","value","setState","handleDelete","preventDefault","slice","addQuestion","id","concat","map","question","index","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,OAA5C,EAAqDC,MAArD,QAAmE,mBAAnE;;IAEqBC,e;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,CAAC,EAAD,CADL;AAENC,MAAAA,IAAI,EAAE;AAFA,K;;UAKRC,U,GAAa,UAAAC,CAAC;AAAA,aAAI,UAAAC,CAAC,EAAI;AACrB,YAAIJ,SAAS,sBAAO,MAAKD,KAAL,CAAWC,SAAlB,CAAb;;AACAA,QAAAA,SAAS,CAACG,CAAD,CAAT,GAAeC,CAAC,CAACC,MAAF,CAASC,KAAxB;;AACA,cAAKC,QAAL,CAAc;AACZP,UAAAA,SAAS,EAATA;AADY,SAAd;AAGD,OANa;AAAA,K;;UAQdQ,Y,GAAe,UAAAL,CAAC;AAAA,aAAI,UAAAC,CAAC,EAAI;AACvBA,QAAAA,CAAC,CAACK,cAAF;AACA,YAAIT,SAAS,gCACR,MAAKD,KAAL,CAAWC,SAAX,CAAqBU,KAArB,CAA2B,CAA3B,EAA8BP,CAA9B,CADQ,sBAER,MAAKJ,KAAL,CAAWC,SAAX,CAAqBU,KAArB,CAA2BP,CAAC,GAAG,CAA/B,CAFQ,EAAb;;AAIA,cAAKI,QAAL,CAAc;AACZP,UAAAA,SAAS,EAATA;AADY,SAAd;AAGD,OATe;AAAA,K;;UAWhBW,W,GAAc,UAAAP,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAGL,CAAC,CAACC,MAAF,CAASO,EAAT,IAAe,MAAKb,KAAL,CAAWE,IAA7B,EAAkC;AAClC,YAAID,SAAS,GAAG,MAAKD,KAAL,CAAWC,SAAX,CAAqBa,MAArB,CAA4B,CAAC,EAAD,CAA5B,CAAhB;;AACA,cAAKN,QAAL,CAAc;AACZP,UAAAA,SAAS,EAATA,SADY;AAEZC,UAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAAX,GAAiB;AAFX,SAAd;AAIG;AACJ,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFN,EAGN,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAgB,QAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAO,QAAA,WAAW,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKF,KAAL,CAAWC,SAAX,CAAqBc,GAArB,CAAyB,UAACC,QAAD,EAAWC,KAAX;AAAA,eACrB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACT;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAE,mBAAmBA,KAAK,GAAC,CAAzB,CAFf;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACd,UAAL,CAAgBc,KAAhB,CAHZ;AAIE,UAAA,KAAK,EAAED,QAJT;AAKE,UAAA,OAAO,EAAG,MAAI,CAACJ,WALjB;AAME,UAAA,EAAE,EAAEK,KANN;AAOE,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CADS,CADqB;AAAA,OAAzB,CAFD,CADA,CALJ,EAgCI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAW,QAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAhCJ,EAmCI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCJ,CADJ,CADJ,CAHM,CAFF,CADF;AAmDD;;;;EAxFwC3B,S;;SAAxBQ,e","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Button, Checkbox, Form, Container, Segment, Header } from 'semantic-ui-react'\r\n\r\nexport default class ListOfQuestions extends Component {\r\n    state = {\r\n      questions: [''],\r\n      size: 0\r\n    }\r\n \r\n    handleText = i => e => {\r\n      let questions = [...this.state.questions]\r\n      questions[i] = e.target.value\r\n      this.setState({\r\n        questions\r\n      })\r\n    }\r\n  \r\n    handleDelete = i => e => {\r\n      e.preventDefault()\r\n      let questions = [\r\n        ...this.state.questions.slice(0, i),\r\n        ...this.state.questions.slice(i + 1)\r\n      ]\r\n      this.setState({\r\n        questions\r\n      })\r\n    }\r\n  \r\n    addQuestion = e => {\r\n      e.preventDefault()\r\n      if(e.target.id == this.state.size){\r\n      let questions = this.state.questions.concat([''])\r\n      this.setState({\r\n        questions,\r\n        size: this.state.size +1\r\n      })\r\n        }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        \r\n          <div>\r\n\r\n                <Header size='huge' >Poller!</Header>\r\n    <Container>\r\n        <Segment padded raised >\r\n            <Form>\r\n                <Form.Field>\r\n               \r\n                <input placeholder='Your Question' />\r\n                </Form.Field>\r\n                <Form.Field >\r\n                <Segment.Group>\r\n                  \r\n                {this.state.questions.map((question, index) => (\r\n                     <Segment>\r\n            <div key={index}>\r\n                \r\n              <input\r\n                type=\"text\"\r\n                placeholder={'Poll Option #' + (index+1)}\r\n                onChange={this.handleText(index)}\r\n                value={question}\r\n                onClick ={this.addQuestion}\r\n                id={index}\r\n                style={{marginTop:'20px'}}\r\n              />\r\n              <br/>\r\n            </div>\r\n            </Segment>\r\n            \r\n         \r\n          ))}\r\n            </Segment.Group>\r\n\r\n                \r\n               \r\n                </Form.Field>\r\n                <Form.Field>\r\n                <Checkbox  label='Public' />\r\n                </Form.Field>\r\n                <Button type='submit'>Submit</Button>\r\n            </Form>\r\n        </Segment>\r\n    </Container>\r\n            </div>\r\n\r\n        </Fragment>\r\n      )\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}