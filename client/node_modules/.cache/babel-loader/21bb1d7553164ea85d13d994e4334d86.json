{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\PollsArchive\\\\PollsArchive.js\";\nimport React, { Component } from 'react';\nimport { Icon, Menu, Table, Container, Header } from 'semantic-ui-react';\nimport { getPolls } from '../../actions/pollActions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../Spinner';\n\nvar PollsArchive =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PollsArchive, _Component);\n\n  function PollsArchive() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollsArchive);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollsArchive)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      column: null,\n      data: [],\n      direction: null,\n      itemsPerPage: 5,\n      currentPage: 0,\n      totalItems: 0,\n      activeItem: 0,\n      loading: true\n    };\n\n    _this.handlePageClick = function (page) {};\n\n    _this.handleNextclick = function () {};\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n\n      _this.setState({\n        activeItem: name\n      });\n    };\n\n    _this.handleNextClick = function () {\n      _this.setState({\n        activeItem: _this.state.activeItem + 1\n      });\n    };\n\n    _this.handleBackClick = function () {\n      _this.setState({\n        activeItem: _this.state.activeItem - 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PollsArchive, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPolls();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var tableData = [];\n\n      if (nextProps.polls) {\n        for (var index in nextProps.polls) {\n          var title = nextProps.polls[index].title;\n          var views = nextProps.polls[index].views;\n          var date = nextProps.polls[index].date.substring(0, 10);\n          tableData.push({\n            title: title,\n            views: views,\n            date: date\n          });\n        }\n\n        this.setState({\n          data: tableData,\n          totalItems: nextProps.polls.length,\n          loading: false\n        });\n      }\n    } //pagination methods\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          activeItem = _this$state.activeItem;\n      return this.state.loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Header, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Displaying Polls \", this.state.activeItem * this.state.itemsPerPage + 1, \"  to \", this.state.activeItem * this.state.itemsPerPage + this.state.itemsPerPage), React.createElement(Table, {\n        celled: true,\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Question\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Viewers\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Date\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, data.slice(Math.floor(this.state.activeItem * this.state.itemsPerPage), Math.floor(this.state.activeItem * this.state.itemsPerPage + this.state.itemsPerPage)).map(function (question) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, question.title), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, question.views), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, question.date.substring(0, 10))));\n      })), React.createElement(Table.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        floated: \"right\",\n        pagination: true,\n        onClick: this.handleBackClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        as: \"a\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"chevron left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), _toConsumableArray(Array(Math.floor(this.state.totalItems / this.state.itemsPerPage))).map(function (x, index) {\n        return React.createElement(Menu.Item, {\n          name: index,\n          active: activeItem === index,\n          onClick: _this2.handleItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, index + 1);\n      }), React.createElement(Menu.Item, {\n        as: \"a\",\n        icon: true,\n        onClick: this.handleNextClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"chevron right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return PollsArchive;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    polls: state.polls.polls\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPolls: getPolls\n})(PollsArchive);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\PollsArchive\\PollsArchive.js"],"names":["React","Component","Icon","Menu","Table","Container","Header","getPolls","connect","Link","Spinner","PollsArchive","state","column","data","direction","itemsPerPage","currentPage","totalItems","activeItem","loading","handlePageClick","page","handleNextclick","handleItemClick","e","name","setState","handleNextClick","handleBackClick","props","nextProps","tableData","polls","index","title","views","date","substring","push","length","slice","Math","floor","map","question","Array","x","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Icon, Menu, Table, Container, Header } from 'semantic-ui-react'\r\nimport {getPolls} from '../../actions/pollActions';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Spinner from '../Spinner';\r\n\r\nclass PollsArchive extends Component {\r\n    state = {\r\n        column: null,\r\n        data: [],\r\n        direction: null,\r\n        itemsPerPage: 5,\r\n        currentPage: 0,\r\n        totalItems: 0,\r\n        activeItem: 0,\r\n        loading:true\r\n      }\r\n      \r\n      componentWillMount(){\r\n\r\n        this.props.getPolls();\r\n\r\n      }\r\n      componentWillReceiveProps(nextProps){\r\n        \r\n        const tableData = [];\r\n\r\n        if(nextProps.polls)\r\n          {\r\n            \r\n            for(const index in nextProps.polls){\r\n              const title = nextProps.polls[index].title;\r\n              const views = nextProps.polls[index].views;\r\n              const date = nextProps.polls[index].date.substring(0,10);\r\n              tableData.push({title:title,views:views,date:date})\r\n            }\r\n            this.setState({data:tableData,totalItems: nextProps.polls.length,loading:false});\r\n\r\n          }\r\n          \r\n\r\n      }\r\n      //pagination methods\r\n      handlePageClick = (page) =>{\r\n\r\n      }\r\n      handleNextclick = () =>{\r\n\r\n      }\r\n      handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name});\r\n        \r\n    }\r\n    handleNextClick = () => {\r\n      this.setState({ activeItem: this.state.activeItem+1});\r\n  }\r\n  handleBackClick = () => {\r\n    this.setState({ activeItem: this.state.activeItem-1});\r\n}\r\n    render() {\r\n       const {data, activeItem} = this.state; \r\n\r\n        return (this.state.loading ? <Spinner/> :\r\n            <Container>\r\n              <Header color='orange'>Displaying Polls {this.state.activeItem*this.state.itemsPerPage+1}  to {(this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage}</Header>\r\n <Table celled selectable>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>Question</Table.HeaderCell>\r\n        <Table.HeaderCell>Viewers</Table.HeaderCell>\r\n        <Table.HeaderCell>Date</Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n    \r\n    <Table.Body>\r\n    {\r\n        data.slice(Math.floor(this.state.activeItem*this.state.itemsPerPage),Math.floor((this.state.activeItem*this.state.itemsPerPage) + this.state.itemsPerPage)).map(question =>\r\n          <React.Fragment>\r\n          <Table.Row>\r\n          <Table.Cell>\r\n            {question.title}   \r\n         </Table.Cell>\r\n         <Table.Cell>{question.views}</Table.Cell>\r\n         <Table.Cell>{question.date.substring(0,10)}</Table.Cell>\r\n       </Table.Row>\r\n      \r\n         </React.Fragment>\r\n        )\r\n      \r\n      }\r\n     \r\n          \r\n \r\n    </Table.Body >\r\n\r\n    <Table.Footer>\r\n      <Table.Row>\r\n        <Table.HeaderCell colSpan='3'>\r\n          <Menu floated='right' pagination onClick ={this.handleBackClick}>\r\n            <Menu.Item as='a' icon>\r\n              <Icon name='chevron left' />\r\n            </Menu.Item>\r\n            {[...Array(Math.floor(this.state.totalItems/this.state.itemsPerPage))].map((x, index) =>\r\n            <Menu.Item  name={index} active={activeItem === index} onClick={this.handleItemClick}>{index+1}</Menu.Item>\r\n            )}\r\n\r\n    \r\n            <Menu.Item as='a' icon onClick ={this.handleNextClick}>\r\n              <Icon name='chevron right' />\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Footer>\r\n  </Table>\r\n            </Container>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  polls: state.polls.polls,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPolls})(PollsArchive);\r\n\r\n"]},"metadata":{},"sourceType":"module"}