{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\keto\\\\client\\\\src\\\\components\\\\Polls\\\\Polls.js\";\nimport React, { Component } from 'react';\nimport { Grid, Segment, Header, Container, Pagination } from 'semantic-ui-react';\n\nvar Polls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Polls, _Component);\n\n  function Polls() {\n    _classCallCheck(this, Polls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Polls).apply(this, arguments));\n  }\n\n  _createClass(Polls, [{\n    key: \"render\",\n    value: function render() {\n      var polls = [{\n        text: 'Should I play Shaman?',\n        options: 5\n      }, {\n        text: 'Should I play Rogue?',\n        options: 2\n      }, {\n        text: 'Should I play Warrior?',\n        options: 10\n      }, {\n        text: 'Should I play Priest?',\n        options: 32\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, polls.map(function (poll) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          raised: true,\n          color: \"orange\",\n          inverted: true,\n          size: \"huge\",\n          onClick: function onClick() {\n            return alert('memes');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, poll.text));\n      }));\n    }\n  }]);\n\n  return Polls;\n}(Component);\n\nexport { Polls as default };","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\keto\\client\\src\\components\\Polls\\Polls.js"],"names":["React","Component","Grid","Segment","Header","Container","Pagination","Polls","polls","text","options","map","poll","alert"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,UAA3C,QAA6D,mBAA7D;;IAGqBC,K;;;;;;;;;;;;;6BAER;AACL,UAAMC,KAAK,GAAG,CACV;AAACC,QAAAA,IAAI,EAAC,uBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OADU,EAIV;AAACD,QAAAA,IAAI,EAAC,sBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OAJU,EAMV;AAACD,QAAAA,IAAI,EAAC,wBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OANU,EAQV;AAACD,QAAAA,IAAI,EAAC,uBAAN;AACAC,QAAAA,OAAO,EAAE;AADT,OARU,CAAd;AAeA,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEMF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,eACf,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,MAAM,MAAf;AAAiB,UAAA,KAAK,EAAC,QAAvB;AAAgC,UAAA,QAAQ,MAAxC;AAA0C,UAAA,IAAI,EAAC,MAA/C;AAAsD,UAAA,OAAO,EAAI;AAAA,mBAAIC,KAAK,CAAC,OAAD,CAAT;AAAA,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEKD,IAAI,CAACH,IAFV,CADJ,CADe;AAAA,OAAd,CAFN,CADH;AAoBH;;;;EAtC8BR,S;;SAAdM,K","sourcesContent":["import React, { Component } from 'react'\r\nimport { Grid, Segment, Header, Container, Pagination } from 'semantic-ui-react'\r\n\r\n\r\nexport default class Polls extends Component {\r\n\r\n    render() {\r\n        const polls = [\r\n            {text:'Should I play Shaman?',\r\n            options: 5\r\n            },\r\n            {text:'Should I play Rogue?',\r\n            options: 2},\r\n            {text:'Should I play Warrior?',\r\n            options: 10},\r\n            {text:'Should I play Priest?',\r\n            options: 32},\r\n\r\n        ]\r\n\r\n      \r\n\r\n        return (\r\n           <div> \r\n         \r\n                {polls.map(poll=>\r\n                <React.Fragment>\r\n                    <Segment raised  color='orange' inverted  size='huge' onClick = {()=>alert('memes')} >\r\n                    \r\n                        {poll.text}\r\n                       \r\n                    </Segment>\r\n                    </React.Fragment>\r\n                 \r\n                \r\n\r\n                 )}\r\n        \r\n            \r\n          \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}